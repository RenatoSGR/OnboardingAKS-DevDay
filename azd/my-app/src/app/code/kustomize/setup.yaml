apiVersion: v1
kind: Namespace
metadata:
  labels:
    control-plane: controller-manager
  name: azureoperator-system
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: apimgmtapis.azure.microsoft.com
spec:
  group: azure.microsoft.com
  names:
    kind: APIMgmtAPI
    listKind: APIMgmtAPIList
    plural: apimgmtapis
    shortNames:
    - apim
    singular: apimgmtapi
  preserveUnknownFields: false
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.provisioned
      name: Provisioned
      type: string
    - jsonPath: .status.message
      name: Message
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: APIMgmtSpec defines the desired state of APIMgmt
            properties:
              apiId:
                type: string
              apiService:
                type: string
              location:
                type: string
              properties:
                properties:
                  apiRevision:
                    description: APIRevision - Describes the Revision of the Api.
                      If no value is provided, default revision 1 is created
                    type: string
                  apiRevisionDescription:
                    description: APIRevisionDescription - Description of the Api Revision.
                    type: string
                  apiVersion:
                    description: APIVersion - Indicates the Version identifier of
                      the API if the API is versioned
                    type: string
                  apiVersionDescription:
                    description: APIVersionDescription - Description of the Api Version.
                    type: string
                  apiVersionSetId:
                    description: APIVersionSetID - A resource identifier for the related
                      ApiVersionSet.
                    type: string
                  apiVersionSets:
                    description: APIVersionSet - APIVersionSetContractDetails an API
                      Version Set contains the common configuration for a set of API
                      versions.
                    properties:
                      description:
                        description: Description - Description of API Version Set.
                        type: string
                      id:
                        description: ID - Identifier for existing API Version Set.
                          Omit this value to create a new Version Set.
                        type: string
                      name:
                        description: Name - The display Name of the API Version Set.
                        type: string
                    type: object
                  description:
                    description: Description - Description of the API. May include
                      HTML formatting tags.
                    type: string
                  displayName:
                    description: DisplayName - API name. Must be 1 to 300 characters
                      long.
                    type: string
                  format:
                    description: 'Format - Format of the Content in which the API
                      is getting imported. Possible values include: ''WadlXML'', ''WadlLinkJSON'',
                      ''SwaggerJSON'', ''SwaggerLinkJSON'', ''Wsdl'', ''WsdlLink'',
                      ''Openapi'', ''Openapijson'', ''OpenapiLink'''
                    type: string
                  isCurrent:
                    description: IsCurrent - Indicates if API revision is current
                      api revision.
                    type: boolean
                  isOnline:
                    description: IsOnline - READ-ONLY; Indicates if API revision is
                      accessible via the gateway.
                    type: boolean
                  path:
                    description: Path - Relative URL uniquely identifying this API
                      and all of its resource paths within the API Management service
                      instance. It is appended to the API endpoint base URL specified
                      during the service instance creation to form a public URL for
                      this API.
                    type: string
                  protocols:
                    description: Protocols - Describes on which protocols the operations
                      in this API can be invoked.
                    items:
                      type: string
                    type: array
                  serviceUrl:
                    description: ServiceURL - Absolute URL of the backend service
                      implementing this API. Cannot be more than 2000 characters long.
                    type: string
                  sourceApiId:
                    description: SourceAPIID - API identifier of the source API.
                    type: string
                  subscriptionRequired:
                    description: SubscriptionRequired - Specifies whether an API or
                      Product subscription is required for accessing the API.
                    type: boolean
                type: object
              resourceGroup:
                minLength: 1
                pattern: ^[-\w\._\(\)]+$
                type: string
            required:
            - apiId
            - apiService
            - location
            - properties
            - resourceGroup
            type: object
          status:
            description: ASOStatus (AzureServiceOperatorsStatus) defines the observed
              state of resource actions
            properties:
              completed:
                format: date-time
                type: string
              containsUpdate:
                type: boolean
              failedProvisioning:
                type: boolean
              flattenedSecrets:
                type: boolean
              message:
                type: string
              output:
                type: string
              pollingUrl:
                type: string
              pollingUrlKind:
                enum:
                - CreateOrUpdate
                - Delete
                type: string
              provisioned:
                type: boolean
              provisioning:
                type: boolean
              requested:
                format: date-time
                type: string
              resourceId:
                type: string
              specHash:
                type: string
              state:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: apimservices.azure.microsoft.com
spec:
  group: azure.microsoft.com
  names:
    kind: ApimService
    listKind: ApimServiceList
    plural: apimservices
    shortNames:
    - apims
    singular: apimservice
  preserveUnknownFields: false
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.provisioned
      name: Provisioned
      type: string
    - jsonPath: .status.message
      name: Message
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: ApimService is the Schema for the apimservices API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ApimServiceSpec defines the desired state of ApimService
            properties:
              appInsightsName:
                type: string
              appInsightsResourceGroup:
                type: string
              location:
                type: string
              publisherEmail:
                type: string
              publisherName:
                type: string
              resourceGroup:
                type: string
              tier:
                description: 'INSERT ADDITIONAL SPEC FIELDS - desired state of cluster
                  Important: Run "make" to regenerate code after modifying this file'
                type: string
              vnetName:
                type: string
              vnetResourceGroup:
                type: string
              vnetSubnetName:
                type: string
              vnetType:
                type: string
            required:
            - location
            - publisherEmail
            - publisherName
            - resourceGroup
            - vnetResourceGroup
            type: object
          status:
            description: ASOStatus (AzureServiceOperatorsStatus) defines the observed
              state of resource actions
            properties:
              completed:
                format: date-time
                type: string
              containsUpdate:
                type: boolean
              failedProvisioning:
                type: boolean
              flattenedSecrets:
                type: boolean
              message:
                type: string
              output:
                type: string
              pollingUrl:
                type: string
              pollingUrlKind:
                enum:
                - CreateOrUpdate
                - Delete
                type: string
              provisioned:
                type: boolean
              provisioning:
                type: boolean
              requested:
                format: date-time
                type: string
              resourceId:
                type: string
              specHash:
                type: string
              state:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: appinsights.azure.microsoft.com
spec:
  group: azure.microsoft.com
  names:
    kind: AppInsights
    listKind: AppInsightsList
    plural: appinsights
    shortNames:
    - ai
    singular: appinsights
  preserveUnknownFields: false
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.provisioned
      name: Provisioned
      type: string
    - jsonPath: .status.message
      name: Message
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: AppInsights is the Schema for the appinsights API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: AppInsightsSpec defines the desired state of AppInsights
            properties:
              applicationType:
                type: string
              keyVaultToStoreSecrets:
                type: string
              kind:
                type: string
              location:
                type: string
              resourceGroup:
                minLength: 1
                pattern: ^[-\w\._\(\)]+$
                type: string
            required:
            - applicationType
            - kind
            - location
            - resourceGroup
            type: object
          status:
            description: ASOStatus (AzureServiceOperatorsStatus) defines the observed
              state of resource actions
            properties:
              completed:
                format: date-time
                type: string
              containsUpdate:
                type: boolean
              failedProvisioning:
                type: boolean
              flattenedSecrets:
                type: boolean
              message:
                type: string
              output:
                type: string
              pollingUrl:
                type: string
              pollingUrlKind:
                enum:
                - CreateOrUpdate
                - Delete
                type: string
              provisioned:
                type: boolean
              provisioning:
                type: boolean
              requested:
                format: date-time
                type: string
              resourceId:
                type: string
              specHash:
                type: string
              state:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: appinsightsapikeys.azure.microsoft.com
spec:
  group: azure.microsoft.com
  names:
    kind: AppInsightsApiKey
    listKind: AppInsightsApiKeyList
    plural: appinsightsapikeys
    singular: appinsightsapikey
  preserveUnknownFields: false
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.provisioned
      name: Provisioned
      type: string
    - jsonPath: .status.message
      name: Message
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: AppInsightsApiKey is the Schema for the appinsightsapikeys API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: AppInsightsApiKeySpec defines the desired state of AppInsightsApiKey
            properties:
              appInsights:
                type: string
              authSDKControlChannel:
                type: boolean
              readTelemetry:
                type: boolean
              resourceGroup:
                type: string
              writeAnnotations:
                type: boolean
            required:
            - appInsights
            - resourceGroup
            type: object
          status:
            description: ASOStatus (AzureServiceOperatorsStatus) defines the observed
              state of resource actions
            properties:
              completed:
                format: date-time
                type: string
              containsUpdate:
                type: boolean
              failedProvisioning:
                type: boolean
              flattenedSecrets:
                type: boolean
              message:
                type: string
              output:
                type: string
              pollingUrl:
                type: string
              pollingUrlKind:
                enum:
                - CreateOrUpdate
                - Delete
                type: string
              provisioned:
                type: boolean
              provisioning:
                type: boolean
              requested:
                format: date-time
                type: string
              resourceId:
                type: string
              specHash:
                type: string
              state:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: azureloadbalancers.azure.microsoft.com
spec:
  group: azure.microsoft.com
  names:
    kind: AzureLoadBalancer
    listKind: AzureLoadBalancerList
    plural: azureloadbalancers
    shortNames:
    - alb
    singular: azureloadbalancer
  preserveUnknownFields: false
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.provisioned
      name: Provisioned
      type: string
    - jsonPath: .status.message
      name: Message
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: AzureLoadBalancer is the Schema for the azureloadbalancers API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: AzureLoadBalancerSpec defines the desired state of AzureLoadBalancer
            properties:
              backendAddressPoolName:
                type: string
              backendPort:
                type: integer
              frontendPortRangeEnd:
                type: integer
              frontendPortRangeStart:
                type: integer
              inboundNatPoolName:
                type: string
              location:
                description: 'INSERT ADDITIONAL SPEC FIELDS - desired state of cluster
                  Important: Run "make" to regenerate code after modifying this file'
                type: string
              publicIPAddressName:
                type: string
              resourceGroup:
                minLength: 1
                pattern: ^[-\w\._\(\)]+$
                type: string
            required:
            - backendAddressPoolName
            - backendPort
            - frontendPortRangeEnd
            - frontendPortRangeStart
            - inboundNatPoolName
            - location
            - publicIPAddressName
            - resourceGroup
            type: object
          status:
            description: ASOStatus (AzureServiceOperatorsStatus) defines the observed
              state of resource actions
            properties:
              completed:
                format: date-time
                type: string
              containsUpdate:
                type: boolean
              failedProvisioning:
                type: boolean
              flattenedSecrets:
                type: boolean
              message:
                type: string
              output:
                type: string
              pollingUrl:
                type: string
              pollingUrlKind:
                enum:
                - CreateOrUpdate
                - Delete
                type: string
              provisioned:
                type: boolean
              provisioning:
                type: boolean
              requested:
                format: date-time
                type: string
              resourceId:
                type: string
              specHash:
                type: string
              state:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: azurenetworkinterfaces.azure.microsoft.com
spec:
  group: azure.microsoft.com
  names:
    kind: AzureNetworkInterface
    listKind: AzureNetworkInterfaceList
    plural: azurenetworkinterfaces
    shortNames:
    - ani
    singular: azurenetworkinterface
  preserveUnknownFields: false
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.provisioned
      name: Provisioned
      type: string
    - jsonPath: .status.message
      name: Message
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: AzureNetworkInterface is the Schema for the azurenetworkinterfaces
          API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: AzureNetworkInterfaceSpec defines the desired state of AzureNetworkInterface
            properties:
              location:
                description: 'INSERT ADDITIONAL SPEC FIELDS - desired state of cluster
                  Important: Run "make" to regenerate code after modifying this file'
                type: string
              publicIPAddressName:
                type: string
              resourceGroup:
                minLength: 1
                pattern: ^[-\w\._\(\)]+$
                type: string
              subnetName:
                type: string
              vnetName:
                type: string
            required:
            - location
            - publicIPAddressName
            - resourceGroup
            - subnetName
            - vnetName
            type: object
          status:
            description: ASOStatus (AzureServiceOperatorsStatus) defines the observed
              state of resource actions
            properties:
              completed:
                format: date-time
                type: string
              containsUpdate:
                type: boolean
              failedProvisioning:
                type: boolean
              flattenedSecrets:
                type: boolean
              message:
                type: string
              output:
                type: string
              pollingUrl:
                type: string
              pollingUrlKind:
                enum:
                - CreateOrUpdate
                - Delete
                type: string
              provisioned:
                type: boolean
              provisioning:
                type: boolean
              requested:
                format: date-time
                type: string
              resourceId:
                type: string
              specHash:
                type: string
              state:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: azurepublicipaddresses.azure.microsoft.com
spec:
  group: azure.microsoft.com
  names:
    kind: AzurePublicIPAddress
    listKind: AzurePublicIPAddressList
    plural: azurepublicipaddresses
    shortNames:
    - apipa
    singular: azurepublicipaddress
  preserveUnknownFields: false
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.provisioned
      name: Provisioned
      type: string
    - jsonPath: .status.message
      name: Message
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: AzurePublicIPAddress is the Schema for the azurepublicipaddresses
          API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: AzurePublicIPAddressSpec defines the desired state of AzurePublicIPAddress
            properties:
              idleTimeoutInMinutes:
                type: integer
              ipTags:
                additionalProperties:
                  type: string
                type: object
              location:
                type: string
              publicIPAddressVersion:
                type: string
              publicIPAllocationMethod:
                type: string
              resourceGroup:
                minLength: 1
                pattern: ^[-\w\._\(\)]+$
                type: string
              skuName:
                type: string
            required:
            - idleTimeoutInMinutes
            - location
            - publicIPAddressVersion
            - publicIPAllocationMethod
            - resourceGroup
            - skuName
            type: object
          status:
            description: ASOStatus (AzureServiceOperatorsStatus) defines the observed
              state of resource actions
            properties:
              completed:
                format: date-time
                type: string
              containsUpdate:
                type: boolean
              failedProvisioning:
                type: boolean
              flattenedSecrets:
                type: boolean
              message:
                type: string
              output:
                type: string
              pollingUrl:
                type: string
              pollingUrlKind:
                enum:
                - CreateOrUpdate
                - Delete
                type: string
              provisioned:
                type: boolean
              provisioning:
                type: boolean
              requested:
                format: date-time
                type: string
              resourceId:
                type: string
              specHash:
                type: string
              state:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: azuresqlactions.azure.microsoft.com
spec:
  group: azure.microsoft.com
  names:
    kind: AzureSqlAction
    listKind: AzureSqlActionList
    plural: azuresqlactions
    shortNames:
    - asqla
    singular: azuresqlaction
  preserveUnknownFields: false
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.provisioned
      name: Provisioned
      type: string
    - jsonPath: .status.message
      name: Message
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: AzureSqlAction is the Schema for the azuresqlactions API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: AzureSqlActionSpec defines the desired state of AzureSqlAction
            properties:
              actionName:
                type: string
              dbName:
                type: string
              dbUser:
                type: string
              resourceGroup:
                description: 'INSERT ADDITIONAL SPEC FIELDS - desired state of cluster
                  Important: Run "make" to regenerate code after modifying this file'
                minLength: 1
                pattern: ^[-\w\._\(\)]+$
                type: string
              serverAdminSecretName:
                type: string
              serverName:
                type: string
              serverSecretKeyVault:
                type: string
              subscriptionId:
                type: string
              userSecretKeyVault:
                type: string
            required:
            - actionName
            - resourceGroup
            - serverName
            type: object
          status:
            description: ASOStatus (AzureServiceOperatorsStatus) defines the observed
              state of resource actions
            properties:
              completed:
                format: date-time
                type: string
              containsUpdate:
                type: boolean
              failedProvisioning:
                type: boolean
              flattenedSecrets:
                type: boolean
              message:
                type: string
              output:
                type: string
              pollingUrl:
                type: string
              pollingUrlKind:
                enum:
                - CreateOrUpdate
                - Delete
                type: string
              provisioned:
                type: boolean
              provisioning:
                type: boolean
              requested:
                format: date-time
                type: string
              resourceId:
                type: string
              specHash:
                type: string
              state:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    cert-manager.io/inject-ca-from: azureoperator-system/azureoperator-serving-cert
    controller-gen.kubebuilder.io/version: v0.8.0
  name: azuresqldatabases.azure.microsoft.com
spec:
  conversion:
    strategy: Webhook
    webhook:
      clientConfig:
        service:
          name: azureoperator-webhook-service
          namespace: azureoperator-system
          path: /convert
      conversionReviewVersions:
      - v1beta1
  group: azure.microsoft.com
  names:
    kind: AzureSqlDatabase
    listKind: AzureSqlDatabaseList
    plural: azuresqldatabases
    shortNames:
    - asqldb
    singular: azuresqldatabase
  preserveUnknownFields: false
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.provisioned
      name: Provisioned
      type: string
    - jsonPath: .status.message
      name: Message
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: AzureSqlDatabase is the Schema for the azuresqldatabases API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: AzureSqlDatabaseSpec defines the desired state of AzureSqlDatabase
            properties:
              dbName:
                description: optional
                type: string
              edition:
                description: 'DBEdition - wraps: https://godoc.org/github.com/Azure/azure-sdk-for-go/services/preview/sql/mgmt/v3.0/sql#DatabaseEdition'
                type: integer
              location:
                description: 'INSERT ADDITIONAL SPEC FIELDS - desired state of cluster
                  Important: Run "make" to regenerate code after modifying this file'
                type: string
              resourcegroup:
                minLength: 1
                pattern: ^[-\w\._\(\)]+$
                type: string
              server:
                type: string
            required:
            - edition
            - location
            - resourcegroup
            - server
            type: object
          status:
            description: ASOStatus (AzureServiceOperatorsStatus) defines the observed
              state of resource actions
            properties:
              completed:
                format: date-time
                type: string
              containsUpdate:
                type: boolean
              failedProvisioning:
                type: boolean
              flattenedSecrets:
                type: boolean
              message:
                type: string
              output:
                type: string
              pollingUrl:
                type: string
              pollingUrlKind:
                enum:
                - CreateOrUpdate
                - Delete
                type: string
              provisioned:
                type: boolean
              provisioning:
                type: boolean
              requested:
                format: date-time
                type: string
              resourceId:
                type: string
              specHash:
                type: string
              state:
                type: string
            type: object
        type: object
    served: true
    storage: false
    subresources:
      status: {}
  - additionalPrinterColumns:
    - jsonPath: .status.provisioned
      name: Provisioned
      type: string
    - jsonPath: .status.message
      name: Message
      type: string
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: AzureSqlDatabase is the Schema for the azuresqldatabases API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: AzureSqlDatabaseSpec defines the desired state of AzureSqlDatabase
            properties:
              dbName:
                type: string
              edition:
                type: integer
              elasticPoolId:
                type: string
              location:
                minLength: 1
                type: string
              maxSize:
                anyOf:
                - type: integer
                - type: string
                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                x-kubernetes-int-or-string: true
              monthlyRetention:
                type: string
              resourceGroup:
                minLength: 1
                pattern: ^[-\w\._\(\)]+$
                type: string
              server:
                minLength: 1
                type: string
              shortTermRetentionPolicy:
                properties:
                  retentionDays:
                    description: RetentionDays is the backup retention period in days.
                      This is how many days Point-in-Time Restore will be supported.
                    format: int32
                    type: integer
                required:
                - retentionDays
                type: object
              sku:
                properties:
                  capacity:
                    description: Capacity - Capacity of the particular SKU.
                    format: int32
                    type: integer
                  family:
                    description: Family - If the service has different generations
                      of hardware, for the same SKU, then that can be captured here.
                    type: string
                  name:
                    description: Name - The name of the SKU, typically, a letter +
                      Number code, e.g. P3.
                    minLength: 1
                    type: string
                  size:
                    description: Size - Size of the particular SKU
                    type: string
                  tier:
                    description: optional Tier - The tier or edition of the particular
                      SKU, e.g. Basic, Premium.
                    type: string
                required:
                - name
                type: object
              subscriptionId:
                type: string
              weekOfYear:
                format: int32
                type: integer
              weeklyRetention:
                type: string
              yearlyRetention:
                type: string
            required:
            - edition
            - location
            - resourceGroup
            - server
            type: object
          status:
            description: ASOStatus (AzureServiceOperatorsStatus) defines the observed
              state of resource actions
            properties:
              completed:
                format: date-time
                type: string
              containsUpdate:
                type: boolean
              failedProvisioning:
                type: boolean
              flattenedSecrets:
                type: boolean
              message:
                type: string
              output:
                type: string
              pollingUrl:
                type: string
              pollingUrlKind:
                enum:
                - CreateOrUpdate
                - Delete
                type: string
              provisioned:
                type: boolean
              provisioning:
                type: boolean
              requested:
                format: date-time
                type: string
              resourceId:
                type: string
              specHash:
                type: string
              state:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    cert-manager.io/inject-ca-from: azureoperator-system/azureoperator-serving-cert
    controller-gen.kubebuilder.io/version: v0.8.0
  name: azuresqlfailovergroups.azure.microsoft.com
spec:
  conversion:
    strategy: Webhook
    webhook:
      clientConfig:
        service:
          name: azureoperator-webhook-service
          namespace: azureoperator-system
          path: /convert
      conversionReviewVersions:
      - v1beta1
  group: azure.microsoft.com
  names:
    kind: AzureSqlFailoverGroup
    listKind: AzureSqlFailoverGroupList
    plural: azuresqlfailovergroups
    shortNames:
    - asqlfog
    singular: azuresqlfailovergroup
  preserveUnknownFields: false
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.provisioned
      name: Provisioned
      type: string
    - jsonPath: .status.message
      name: Message
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: AzureSqlFailoverGroup is the Schema for the azuresqlfailovergroups
          API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: AzureSqlFailoverGroupSpec defines the desired state of AzureSqlFailoverGroup
            properties:
              databaselist:
                items:
                  type: string
                type: array
              failovergraceperiod:
                format: int32
                type: integer
              failoverpolicy:
                description: ReadWriteEndpointFailoverPolicy - wraps https://godoc.org/github.com/Azure/azure-sdk-for-go/services/preview/sql/mgmt/v3.0/sql#ReadWriteEndpointFailoverPolicy
                type: string
              keyVaultToStoreSecrets:
                type: string
              location:
                description: 'Important: Run "make" to regenerate code after modifying
                  this file'
                type: string
              resourcegroup:
                minLength: 1
                pattern: ^[-\w\._\(\)]+$
                type: string
              secondaryserver:
                type: string
              secondaryserverresourcegroup:
                type: string
              server:
                type: string
            required:
            - databaselist
            - failovergraceperiod
            - failoverpolicy
            - location
            - resourcegroup
            - secondaryserver
            - secondaryserverresourcegroup
            - server
            type: object
          status:
            description: ASOStatus (AzureServiceOperatorsStatus) defines the observed
              state of resource actions
            properties:
              completed:
                format: date-time
                type: string
              containsUpdate:
                type: boolean
              failedProvisioning:
                type: boolean
              flattenedSecrets:
                type: boolean
              message:
                type: string
              output:
                type: string
              pollingUrl:
                type: string
              pollingUrlKind:
                enum:
                - CreateOrUpdate
                - Delete
                type: string
              provisioned:
                type: boolean
              provisioning:
                type: boolean
              requested:
                format: date-time
                type: string
              resourceId:
                type: string
              specHash:
                type: string
              state:
                type: string
            type: object
        type: object
    served: true
    storage: false
    subresources:
      status: {}
  - additionalPrinterColumns:
    - jsonPath: .status.provisioned
      name: Provisioned
      type: string
    - jsonPath: .status.message
      name: Message
      type: string
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: AzureSqlFailoverGroup is the Schema for the azuresqlfailovergroups
          API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: AzureSqlFailoverGroupSpec defines the desired state of AzureSqlFailoverGroup
            properties:
              SecondaryServerSubscriptionId:
                type: string
              databaseList:
                items:
                  type: string
                type: array
              failoverGracePeriod:
                description: 'TODO: This field should be a ptr as it must not be specified
                  if the failover policy is Manual, TODO: but is required when the
                  policy is Automatic'
                format: int32
                type: integer
              failoverPolicy:
                description: ReadWriteEndpointFailoverPolicy - wraps https://godoc.org/github.com/Azure/azure-sdk-for-go/services/preview/sql/mgmt/v3.0/sql#ReadWriteEndpointFailoverPolicy
                enum:
                - Automatic
                - Manual
                type: string
              keyVaultToStoreSecrets:
                type: string
              location:
                description: 'Important: Run "make" to regenerate code after modifying
                  this file'
                minLength: 1
                type: string
              resourceGroup:
                minLength: 1
                pattern: ^[-\w\._\(\)]+$
                type: string
              secondaryServer:
                type: string
              secondaryServerResourceGroup:
                type: string
              server:
                minLength: 1
                type: string
              subscriptionId:
                type: string
            required:
            - databaseList
            - failoverGracePeriod
            - failoverPolicy
            - location
            - resourceGroup
            - secondaryServer
            - secondaryServerResourceGroup
            - server
            type: object
          status:
            description: ASOStatus (AzureServiceOperatorsStatus) defines the observed
              state of resource actions
            properties:
              completed:
                format: date-time
                type: string
              containsUpdate:
                type: boolean
              failedProvisioning:
                type: boolean
              flattenedSecrets:
                type: boolean
              message:
                type: string
              output:
                type: string
              pollingUrl:
                type: string
              pollingUrlKind:
                enum:
                - CreateOrUpdate
                - Delete
                type: string
              provisioned:
                type: boolean
              provisioning:
                type: boolean
              requested:
                format: date-time
                type: string
              resourceId:
                type: string
              specHash:
                type: string
              state:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    cert-manager.io/inject-ca-from: azureoperator-system/azureoperator-serving-cert
    controller-gen.kubebuilder.io/version: v0.8.0
  name: azuresqlfirewallrules.azure.microsoft.com
spec:
  conversion:
    strategy: Webhook
    webhook:
      clientConfig:
        service:
          name: azureoperator-webhook-service
          namespace: azureoperator-system
          path: /convert
      conversionReviewVersions:
      - v1beta1
  group: azure.microsoft.com
  names:
    kind: AzureSqlFirewallRule
    listKind: AzureSqlFirewallRuleList
    plural: azuresqlfirewallrules
    shortNames:
    - asqlfwr
    singular: azuresqlfirewallrule
  preserveUnknownFields: false
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.provisioned
      name: Provisioned
      type: string
    - jsonPath: .status.message
      name: Message
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: AzureSqlFirewallRule is the Schema for the azuresqlfirewallrules
          API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: AzureSqlFirewallRuleSpec defines the desired state of AzureSqlFirewallRule
            properties:
              endipaddress:
                type: string
              resourcegroup:
                description: 'INSERT ADDITIONAL SPEC FIELDS - desired state of cluster
                  Important: Run "make" to regenerate code after modifying this file'
                minLength: 1
                pattern: ^[-\w\._\(\)]+$
                type: string
              server:
                type: string
              startipaddress:
                type: string
            required:
            - resourcegroup
            - server
            type: object
          status:
            description: ASOStatus (AzureServiceOperatorsStatus) defines the observed
              state of resource actions
            properties:
              completed:
                format: date-time
                type: string
              containsUpdate:
                type: boolean
              failedProvisioning:
                type: boolean
              flattenedSecrets:
                type: boolean
              message:
                type: string
              output:
                type: string
              pollingUrl:
                type: string
              pollingUrlKind:
                enum:
                - CreateOrUpdate
                - Delete
                type: string
              provisioned:
                type: boolean
              provisioning:
                type: boolean
              requested:
                format: date-time
                type: string
              resourceId:
                type: string
              specHash:
                type: string
              state:
                type: string
            type: object
        type: object
    served: true
    storage: false
    subresources:
      status: {}
  - additionalPrinterColumns:
    - jsonPath: .status.provisioned
      name: Provisioned
      type: string
    - jsonPath: .status.message
      name: Message
      type: string
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: AzureSqlFirewallRule is the Schema for the azuresqlfirewallrules
          API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: AzureSqlFirewallRuleSpec defines the desired state of AzureSqlFirewallRule
            properties:
              endIpAddress:
                type: string
              resourceGroup:
                description: 'INSERT ADDITIONAL SPEC FIELDS - desired state of cluster
                  Important: Run "make" to regenerate code after modifying this file'
                minLength: 1
                pattern: ^[-\w\._\(\)]+$
                type: string
              server:
                minLength: 1
                type: string
              startIpAddress:
                type: string
              subscriptionID:
                type: string
            required:
            - resourceGroup
            - server
            type: object
          status:
            description: ASOStatus (AzureServiceOperatorsStatus) defines the observed
              state of resource actions
            properties:
              completed:
                format: date-time
                type: string
              containsUpdate:
                type: boolean
              failedProvisioning:
                type: boolean
              flattenedSecrets:
                type: boolean
              message:
                type: string
              output:
                type: string
              pollingUrl:
                type: string
              pollingUrlKind:
                enum:
                - CreateOrUpdate
                - Delete
                type: string
              provisioned:
                type: boolean
              provisioning:
                type: boolean
              requested:
                format: date-time
                type: string
              resourceId:
                type: string
              specHash:
                type: string
              state:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: azuresqlmanagedusers.azure.microsoft.com
spec:
  group: azure.microsoft.com
  names:
    kind: AzureSQLManagedUser
    listKind: AzureSQLManagedUserList
    plural: azuresqlmanagedusers
    shortNames:
    - asqlmu
    singular: azuresqlmanageduser
  preserveUnknownFields: false
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.provisioned
      name: Provisioned
      type: string
    - jsonPath: .status.message
      name: Message
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: AzureSQLManagedUser is the Schema for the azuresqlmanagedusers
          API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: AzureSQLManagedUserSpec defines the desired state of AzureSQLManagedUser
            properties:
              dbName:
                minLength: 1
                type: string
              keyVaultSecretPrefix:
                type: string
              keyVaultToStoreSecrets:
                type: string
              managedIdentityClientId:
                type: string
              managedIdentityName:
                type: string
              resourceGroup:
                minLength: 1
                pattern: ^[-\w\._\(\)]+$
                type: string
              roles:
                items:
                  type: string
                type: array
              server:
                minLength: 1
                type: string
              subscriptionId:
                type: string
            required:
            - dbName
            - managedIdentityClientId
            - resourceGroup
            - roles
            - server
            type: object
          status:
            description: ASOStatus (AzureServiceOperatorsStatus) defines the observed
              state of resource actions
            properties:
              completed:
                format: date-time
                type: string
              containsUpdate:
                type: boolean
              failedProvisioning:
                type: boolean
              flattenedSecrets:
                type: boolean
              message:
                type: string
              output:
                type: string
              pollingUrl:
                type: string
              pollingUrlKind:
                enum:
                - CreateOrUpdate
                - Delete
                type: string
              provisioned:
                type: boolean
              provisioning:
                type: boolean
              requested:
                format: date-time
                type: string
              resourceId:
                type: string
              specHash:
                type: string
              state:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    cert-manager.io/inject-ca-from: azureoperator-system/azureoperator-serving-cert
    controller-gen.kubebuilder.io/version: v0.8.0
  name: azuresqlservers.azure.microsoft.com
spec:
  conversion:
    strategy: Webhook
    webhook:
      clientConfig:
        service:
          name: azureoperator-webhook-service
          namespace: azureoperator-system
          path: /convert
      conversionReviewVersions:
      - v1beta1
  group: azure.microsoft.com
  names:
    kind: AzureSqlServer
    listKind: AzureSqlServerList
    plural: azuresqlservers
    shortNames:
    - asqls
    singular: azuresqlserver
  preserveUnknownFields: false
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.provisioned
      name: Provisioned
      type: string
    - jsonPath: .status.message
      name: Message
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: AzureSqlServer is the Schema for the azuresqlservers API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: AzureSqlServerSpec defines the desired state of AzureSqlServer
            properties:
              keyVaultToStoreSecrets:
                type: string
              location:
                description: 'INSERT ADDITIONAL SPEC FIELDS - desired state of cluster
                  Important: Run "make" to regenerate code after modifying this file'
                type: string
              resourcegroup:
                minLength: 1
                pattern: ^[-\w\._\(\)]+$
                type: string
            required:
            - location
            - resourcegroup
            type: object
          status:
            description: ASOStatus (AzureServiceOperatorsStatus) defines the observed
              state of resource actions
            properties:
              completed:
                format: date-time
                type: string
              containsUpdate:
                type: boolean
              failedProvisioning:
                type: boolean
              flattenedSecrets:
                type: boolean
              message:
                type: string
              output:
                type: string
              pollingUrl:
                type: string
              pollingUrlKind:
                enum:
                - CreateOrUpdate
                - Delete
                type: string
              provisioned:
                type: boolean
              provisioning:
                type: boolean
              requested:
                format: date-time
                type: string
              resourceId:
                type: string
              specHash:
                type: string
              state:
                type: string
            type: object
        type: object
    served: true
    storage: false
    subresources:
      status: {}
  - additionalPrinterColumns:
    - jsonPath: .status.provisioned
      name: Provisioned
      type: string
    - jsonPath: .status.message
      name: Message
      type: string
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: AzureSqlServer is the Schema for the azuresqlservers API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: AzureSqlServerSpec defines the desired state of AzureSqlServer
            properties:
              keyVaultToStoreSecrets:
                type: string
              location:
                description: 'INSERT ADDITIONAL SPEC FIELDS - desired state of cluster
                  Important: Run "make" to regenerate code after modifying this file'
                minLength: 1
                type: string
              resourceGroup:
                minLength: 1
                pattern: ^[-\w\._\(\)]+$
                type: string
              subscriptionId:
                type: string
            required:
            - location
            - resourceGroup
            type: object
          status:
            description: ASOStatus (AzureServiceOperatorsStatus) defines the observed
              state of resource actions
            properties:
              completed:
                format: date-time
                type: string
              containsUpdate:
                type: boolean
              failedProvisioning:
                type: boolean
              flattenedSecrets:
                type: boolean
              message:
                type: string
              output:
                type: string
              pollingUrl:
                type: string
              pollingUrlKind:
                enum:
                - CreateOrUpdate
                - Delete
                type: string
              provisioned:
                type: boolean
              provisioning:
                type: boolean
              requested:
                format: date-time
                type: string
              resourceId:
                type: string
              specHash:
                type: string
              state:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: azuresqlusers.azure.microsoft.com
spec:
  group: azure.microsoft.com
  names:
    kind: AzureSQLUser
    listKind: AzureSQLUserList
    plural: azuresqlusers
    shortNames:
    - asqlu
    singular: azuresqluser
  preserveUnknownFields: false
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.provisioned
      name: Provisioned
      type: string
    - jsonPath: .status.message
      name: Message
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: AzureSQLUser is the Schema for the sqlusers API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: AzureSQLUserSpec defines the desired state of SqlUser
            properties:
              adminSecret:
                type: string
              adminSecretKeyVault:
                type: string
              dbName:
                minLength: 1
                type: string
              keyVaultSecretFormats:
                items:
                  type: string
                type: array
              keyVaultSecretPrefix:
                type: string
              keyVaultToStoreSecrets:
                type: string
              resourceGroup:
                minLength: 1
                pattern: ^[-\w\._\(\)]+$
                type: string
              roles:
                items:
                  type: string
                type: array
              server:
                minLength: 1
                type: string
              subscriptionId:
                description: optional
                type: string
              username:
                type: string
            required:
            - dbName
            - resourceGroup
            - roles
            - server
            type: object
          status:
            description: ASOStatus (AzureServiceOperatorsStatus) defines the observed
              state of resource actions
            properties:
              completed:
                format: date-time
                type: string
              containsUpdate:
                type: boolean
              failedProvisioning:
                type: boolean
              flattenedSecrets:
                type: boolean
              message:
                type: string
              output:
                type: string
              pollingUrl:
                type: string
              pollingUrlKind:
                enum:
                - CreateOrUpdate
                - Delete
                type: string
              provisioned:
                type: boolean
              provisioning:
                type: boolean
              requested:
                format: date-time
                type: string
              resourceId:
                type: string
              specHash:
                type: string
              state:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: azuresqlvnetrules.azure.microsoft.com
spec:
  group: azure.microsoft.com
  names:
    kind: AzureSQLVNetRule
    listKind: AzureSQLVNetRuleList
    plural: azuresqlvnetrules
    shortNames:
    - asqlvnr
    singular: azuresqlvnetrule
  preserveUnknownFields: false
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.provisioned
      name: Provisioned
      type: string
    - jsonPath: .status.message
      name: Message
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: AzureSQLVNetRule is the Schema for the azuresqlvnetrules API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: 'NOTE: json tags are required.  Any new fields you add must
              have json tags for the fields to be serialized. AzureSQLVNetRuleSpec
              defines the desired state of AzureSQLVNetRule'
            properties:
              ignoreMissingServiceEndpoint:
                type: boolean
              resourceGroup:
                description: 'INSERT ADDITIONAL SPEC FIELDS - desired state of cluster
                  Important: Run "make" to regenerate code after modifying this file'
                minLength: 1
                pattern: ^[-\w\._\(\)]+$
                type: string
              server:
                minLength: 1
                type: string
              serverSubscriptionID:
                type: string
              subnetName:
                type: string
              vNetName:
                type: string
              vNetResourceGroup:
                type: string
              vNetSubscriptionID:
                type: string
            required:
            - resourceGroup
            - server
            - subnetName
            - vNetName
            - vNetResourceGroup
            type: object
          status:
            description: ASOStatus (AzureServiceOperatorsStatus) defines the observed
              state of resource actions
            properties:
              completed:
                format: date-time
                type: string
              containsUpdate:
                type: boolean
              failedProvisioning:
                type: boolean
              flattenedSecrets:
                type: boolean
              message:
                type: string
              output:
                type: string
              pollingUrl:
                type: string
              pollingUrlKind:
                enum:
                - CreateOrUpdate
                - Delete
                type: string
              provisioned:
                type: boolean
              provisioning:
                type: boolean
              requested:
                format: date-time
                type: string
              resourceId:
                type: string
              specHash:
                type: string
              state:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: azurevirtualmachineextensions.azure.microsoft.com
spec:
  group: azure.microsoft.com
  names:
    kind: AzureVirtualMachineExtension
    listKind: AzureVirtualMachineExtensionList
    plural: azurevirtualmachineextensions
    shortNames:
    - avme
    singular: azurevirtualmachineextension
  preserveUnknownFields: false
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.provisioned
      name: Provisioned
      type: string
    - jsonPath: .status.message
      name: Message
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: AzureVirtualMachineExtension is the Schema for the azurevirtualmachineextensions
          API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: AzureVirtualMachineExtensionSpec defines the desired state
              of AzureVirtualMachineExtension
            properties:
              autoUpgradeMinorVersion:
                type: boolean
              forceUpdateTag:
                type: string
              location:
                description: 'INSERT ADDITIONAL SPEC FIELDS - desired state of cluster
                  Important: Run "make" to regenerate code after modifying this file'
                type: string
              protectedSettings:
                type: string
              publisher:
                type: string
              resourceGroup:
                minLength: 1
                pattern: ^[-\w\._\(\)]+$
                type: string
              settings:
                type: string
              typeHandlerVersion:
                type: string
              typeName:
                type: string
              vmName:
                type: string
            required:
            - autoUpgradeMinorVersion
            - forceUpdateTag
            - location
            - publisher
            - resourceGroup
            - typeHandlerVersion
            - typeName
            - vmName
            type: object
          status:
            description: ASOStatus (AzureServiceOperatorsStatus) defines the observed
              state of resource actions
            properties:
              completed:
                format: date-time
                type: string
              containsUpdate:
                type: boolean
              failedProvisioning:
                type: boolean
              flattenedSecrets:
                type: boolean
              message:
                type: string
              output:
                type: string
              pollingUrl:
                type: string
              pollingUrlKind:
                enum:
                - CreateOrUpdate
                - Delete
                type: string
              provisioned:
                type: boolean
              provisioning:
                type: boolean
              requested:
                format: date-time
                type: string
              resourceId:
                type: string
              specHash:
                type: string
              state:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: azurevirtualmachines.azure.microsoft.com
spec:
  group: azure.microsoft.com
  names:
    kind: AzureVirtualMachine
    listKind: AzureVirtualMachineList
    plural: azurevirtualmachines
    shortNames:
    - avm
    singular: azurevirtualmachine
  preserveUnknownFields: false
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.provisioned
      name: Provisioned
      type: string
    - jsonPath: .status.message
      name: Message
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: AzureVirtualMachine is the Schema for the azurevirtualmachines
          API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: AzureVirtualMachineSpec defines the desired state of AzureVirtualMachine
            properties:
              adminUserName:
                type: string
              location:
                description: 'INSERT ADDITIONAL SPEC FIELDS - desired state of cluster
                  Important: Run "make" to regenerate code after modifying this file'
                type: string
              networkInterfaceName:
                type: string
              osType:
                type: string
              platformImageURN:
                type: string
              resourceGroup:
                minLength: 1
                pattern: ^[-\w\._\(\)]+$
                type: string
              sshPublicKeyData:
                type: string
              vmSize:
                type: string
            required:
            - adminUserName
            - location
            - networkInterfaceName
            - osType
            - platformImageURN
            - resourceGroup
            - vmSize
            type: object
          status:
            description: ASOStatus (AzureServiceOperatorsStatus) defines the observed
              state of resource actions
            properties:
              completed:
                format: date-time
                type: string
              containsUpdate:
                type: boolean
              failedProvisioning:
                type: boolean
              flattenedSecrets:
                type: boolean
              message:
                type: string
              output:
                type: string
              pollingUrl:
                type: string
              pollingUrlKind:
                enum:
                - CreateOrUpdate
                - Delete
                type: string
              provisioned:
                type: boolean
              provisioning:
                type: boolean
              requested:
                format: date-time
                type: string
              resourceId:
                type: string
              specHash:
                type: string
              state:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: azurevmscalesets.azure.microsoft.com
spec:
  group: azure.microsoft.com
  names:
    kind: AzureVMScaleSet
    listKind: AzureVMScaleSetList
    plural: azurevmscalesets
    shortNames:
    - avmss
    singular: azurevmscaleset
  preserveUnknownFields: false
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.provisioned
      name: Provisioned
      type: string
    - jsonPath: .status.message
      name: Message
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: AzureVMScaleSet is the Schema for the azurevmscalesets API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: AzureVMScaleSetSpec defines the desired state of AzureVMScaleSet
            properties:
              adminUserName:
                type: string
              backendAddressPoolName:
                type: string
              capacity:
                type: integer
              inboundNatPoolName:
                type: string
              loadBalancerName:
                type: string
              location:
                description: 'INSERT ADDITIONAL SPEC FIELDS - desired state of cluster
                  Important: Run "make" to regenerate code after modifying this file'
                type: string
              osType:
                type: string
              platformImageURN:
                type: string
              resourceGroup:
                minLength: 1
                pattern: ^[-\w\._\(\)]+$
                type: string
              sshPublicKeyData:
                type: string
              subnetName:
                type: string
              virtualNetworkName:
                type: string
              vmSize:
                type: string
            required:
            - adminUserName
            - backendAddressPoolName
            - capacity
            - inboundNatPoolName
            - loadBalancerName
            - location
            - osType
            - platformImageURN
            - resourceGroup
            - subnetName
            - virtualNetworkName
            - vmSize
            type: object
          status:
            description: ASOStatus (AzureServiceOperatorsStatus) defines the observed
              state of resource actions
            properties:
              completed:
                format: date-time
                type: string
              containsUpdate:
                type: boolean
              failedProvisioning:
                type: boolean
              flattenedSecrets:
                type: boolean
              message:
                type: string
              output:
                type: string
              pollingUrl:
                type: string
              pollingUrlKind:
                enum:
                - CreateOrUpdate
                - Delete
                type: string
              provisioned:
                type: boolean
              provisioning:
                type: boolean
              requested:
                format: date-time
                type: string
              resourceId:
                type: string
              specHash:
                type: string
              state:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    cert-manager.io/inject-ca-from: azureoperator-system/azureoperator-serving-cert
    controller-gen.kubebuilder.io/version: v0.8.0
  name: blobcontainers.azure.microsoft.com
spec:
  conversion:
    strategy: Webhook
    webhook:
      clientConfig:
        service:
          name: azureoperator-webhook-service
          namespace: azureoperator-system
          path: /convert
      conversionReviewVersions:
      - v1beta1
  group: azure.microsoft.com
  names:
    kind: BlobContainer
    listKind: BlobContainerList
    plural: blobcontainers
    shortNames:
    - bc
    singular: blobcontainer
  preserveUnknownFields: false
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.provisioned
      name: Provisioned
      type: string
    - jsonPath: .status.message
      name: Message
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: BlobContainer is the Schema for the blobcontainers API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: BlobContainerSpec defines the desired state of BlobContainer
            properties:
              accesslevel:
                description: PublicAccess enumerates the values for public access.
                type: string
              accountname:
                type: string
              location:
                description: 'INSERT ADDITIONAL SPEC FIELDS - desired state of cluster
                  Important: Run "make" to regenerate code after modifying this file'
                type: string
              resourcegroup:
                minLength: 1
                pattern: ^[-\w\._\(\)]+$
                type: string
            required:
            - location
            - resourcegroup
            type: object
          status:
            description: ASOStatus (AzureServiceOperatorsStatus) defines the observed
              state of resource actions
            properties:
              completed:
                format: date-time
                type: string
              containsUpdate:
                type: boolean
              failedProvisioning:
                type: boolean
              flattenedSecrets:
                type: boolean
              message:
                type: string
              output:
                type: string
              pollingUrl:
                type: string
              pollingUrlKind:
                enum:
                - CreateOrUpdate
                - Delete
                type: string
              provisioned:
                type: boolean
              provisioning:
                type: boolean
              requested:
                format: date-time
                type: string
              resourceId:
                type: string
              specHash:
                type: string
              state:
                type: string
            type: object
        type: object
    served: true
    storage: false
    subresources:
      status: {}
  - additionalPrinterColumns:
    - jsonPath: .status.provisioned
      name: Provisioned
      type: string
    - jsonPath: .status.message
      name: Message
      type: string
    name: v1alpha2
    schema:
      openAPIV3Schema:
        description: BlobContainer is the Schema for the blobcontainers API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: BlobContainerSpec defines the desired state of BlobContainer
            properties:
              accessLevel:
                description: PublicAccess enumerates the values for public access.
                type: string
              accountName:
                type: string
              location:
                description: 'INSERT ADDITIONAL SPEC FIELDS - desired state of cluster
                  Important: Run "make" to regenerate code after modifying this file'
                type: string
              resourceGroup:
                minLength: 1
                pattern: ^[-\w\._\(\)]+$
                type: string
            required:
            - location
            - resourceGroup
            type: object
          status:
            description: ASOStatus (AzureServiceOperatorsStatus) defines the observed
              state of resource actions
            properties:
              completed:
                format: date-time
                type: string
              containsUpdate:
                type: boolean
              failedProvisioning:
                type: boolean
              flattenedSecrets:
                type: boolean
              message:
                type: string
              output:
                type: string
              pollingUrl:
                type: string
              pollingUrlKind:
                enum:
                - CreateOrUpdate
                - Delete
                type: string
              provisioned:
                type: boolean
              provisioning:
                type: boolean
              requested:
                format: date-time
                type: string
              resourceId:
                type: string
              specHash:
                type: string
              state:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: consumergroups.azure.microsoft.com
spec:
  group: azure.microsoft.com
  names:
    kind: ConsumerGroup
    listKind: ConsumerGroupList
    plural: consumergroups
    shortNames:
    - cg
    singular: consumergroup
  preserveUnknownFields: false
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.provisioned
      name: Provisioned
      type: string
    - jsonPath: .status.message
      name: Message
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: ConsumerGroup is the Schema for the consumergroups API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ConsumerGroupSpec defines the desired state of ConsumerGroup
            properties:
              consumerGroupName:
                type: string
              eventHub:
                type: string
              namespace:
                type: string
              resourceGroup:
                description: 'INSERT ADDITIONAL SPEC FIELDS - desired state of cluster
                  Important: Run "make" to regenerate code after modifying this file'
                minLength: 1
                pattern: ^[-\w\._\(\)]+$
                type: string
            required:
            - resourceGroup
            type: object
          status:
            description: ASOStatus (AzureServiceOperatorsStatus) defines the observed
              state of resource actions
            properties:
              completed:
                format: date-time
                type: string
              containsUpdate:
                type: boolean
              failedProvisioning:
                type: boolean
              flattenedSecrets:
                type: boolean
              message:
                type: string
              output:
                type: string
              pollingUrl:
                type: string
              pollingUrlKind:
                enum:
                - CreateOrUpdate
                - Delete
                type: string
              provisioned:
                type: boolean
              provisioning:
                type: boolean
              requested:
                format: date-time
                type: string
              resourceId:
                type: string
              specHash:
                type: string
              state:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: cosmosdbs.azure.microsoft.com
spec:
  group: azure.microsoft.com
  names:
    kind: CosmosDB
    listKind: CosmosDBList
    plural: cosmosdbs
    shortNames:
    - cdb
    singular: cosmosdb
  preserveUnknownFields: false
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.provisioned
      name: Provisioned
      type: string
    - jsonPath: .status.message
      name: Message
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: CosmosDB is the Schema for the cosmosdbs API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: CosmosDBSpec defines the desired state of CosmosDB
            properties:
              ipRules:
                items:
                  type: string
                type: array
              keyVaultToStoreSecrets:
                type: string
              kind:
                description: CosmosDBKind enumerates the values for kind. Only one
                  of the following kinds may be specified. If none of the following
                  kinds is specified, the default one is GlobalDocumentDBKind.
                enum:
                - GlobalDocumentDB
                - MongoDB
                type: string
              location:
                description: Location is the Azure location where the CosmosDB exists
                minLength: 0
                type: string
              locations:
                items:
                  description: CosmosDBLocation defines one or more locations for
                    geo-redundancy and high availability
                  properties:
                    failoverPriority:
                      format: int32
                      type: integer
                    isZoneRedundant:
                      type: boolean
                    locationName:
                      type: string
                  required:
                  - failoverPriority
                  - locationName
                  type: object
                type: array
              properties:
                description: CosmosDBProperties the CosmosDBProperties of CosmosDB.
                properties:
                  capabilities:
                    items:
                      description: Capability cosmos DB capability object
                      properties:
                        name:
                          description: Name *CosmosCapability `json:"name,omitempty"`
                          enum:
                          - EnableCassandra
                          - EnableTable
                          - EnableGremlin
                          - EnableMongo
                          type: string
                      type: object
                    type: array
                  databaseAccountOfferType:
                    description: DatabaseAccountOfferType - The offer type for the
                      Cosmos DB database account.
                    enum:
                    - Standard
                    type: string
                  enableMultipleWriteLocations:
                    type: boolean
                  isVirtualNetworkFilterEnabled:
                    description: IsVirtualNetworkFilterEnabled - Flag to indicate
                      whether to enable/disable Virtual Network ACL rules.
                    type: boolean
                  mongoDBVersion:
                    type: string
                type: object
              resourceGroup:
                minLength: 1
                pattern: ^[-\w\._\(\)]+$
                type: string
              virtualNetworkRules:
                items:
                  description: CosmosDBVirtualNetworkRule virtual Network ACL Rule
                    object
                  properties:
                    ignoreMissingVNetServiceEndpoint:
                      description: IgnoreMissingVNetServiceEndpoint - Create firewall
                        rule before the virtual network has vnet service endpoint
                        enabled.
                      type: boolean
                    subnetID:
                      description: 'ID - Resource ID of a subnet, for example: /subscriptions/{subscriptionId}/resourceGroups/{groupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/subnets/{subnetName}.'
                      type: string
                  type: object
                type: array
            required:
            - resourceGroup
            type: object
          status:
            description: ASOStatus (AzureServiceOperatorsStatus) defines the observed
              state of resource actions
            properties:
              completed:
                format: date-time
                type: string
              containsUpdate:
                type: boolean
              failedProvisioning:
                type: boolean
              flattenedSecrets:
                type: boolean
              message:
                type: string
              output:
                type: string
              pollingUrl:
                type: string
              pollingUrlKind:
                enum:
                - CreateOrUpdate
                - Delete
                type: string
              provisioned:
                type: boolean
              provisioning:
                type: boolean
              requested:
                format: date-time
                type: string
              resourceId:
                type: string
              specHash:
                type: string
              state:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: cosmosdbsqldatabases.azure.microsoft.com
spec:
  group: azure.microsoft.com
  names:
    kind: CosmosDBSQLDatabase
    listKind: CosmosDBSQLDatabaseList
    plural: cosmosdbsqldatabases
    shortNames:
    - cdbsql
    singular: cosmosdbsqldatabase
  preserveUnknownFields: false
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.provisioned
      name: Provisioned
      type: string
    - jsonPath: .status.message
      name: Message
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: CosmosDBSQLDatabase is the Schema for the cosmosdbsql API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: CosmosDBSQLDatabaseSpec defines the desired state of the
              CosmosDBSQLDatabase
            properties:
              autoscaleSettings:
                description: AutoscaleSettings contains the user specified autoscale
                  configuration. This must not be specified if Throughput is specified.
                  This cannot be changed after creation if it (or throughput) was
                  not set to something initially.
                properties:
                  maxThroughput:
                    description: MaxThroughput is the autoscale max RU/s of the database.
                    format: int32
                    type: integer
                type: object
              cosmosDBAccount:
                description: Account is the account that the SQL database will be
                  created in.
                minLength: 1
                type: string
              resourceGroup:
                description: ResourceGroup is the resource group the CosmosDBSQLDatabase
                  will be created in.
                minLength: 1
                pattern: ^[-\w\._\(\)]+$
                type: string
              tags:
                additionalProperties:
                  type: string
                description: Tags are key-value pairs associated with the resource.
                type: object
              throughput:
                description: Throughput is the user specified manual throughput (RU/s)
                  for the database expressed in units of 100 request units per second.
                  The minimum is 400 up to 1,000,000 (or higher by requesting a limit
                  increase). This must not be specified if autoscale is specified.
                  This cannot be changed after creation if it (or autoscaleSettings)
                  was not set to something initially.
                format: int32
                type: integer
            required:
            - cosmosDBAccount
            - resourceGroup
            type: object
          status:
            description: ASOStatus (AzureServiceOperatorsStatus) defines the observed
              state of resource actions
            properties:
              completed:
                format: date-time
                type: string
              containsUpdate:
                type: boolean
              failedProvisioning:
                type: boolean
              flattenedSecrets:
                type: boolean
              message:
                type: string
              output:
                type: string
              pollingUrl:
                type: string
              pollingUrlKind:
                enum:
                - CreateOrUpdate
                - Delete
                type: string
              provisioned:
                type: boolean
              provisioning:
                type: boolean
              requested:
                format: date-time
                type: string
              resourceId:
                type: string
              specHash:
                type: string
              state:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: eventhubnamespaces.azure.microsoft.com
spec:
  group: azure.microsoft.com
  names:
    kind: EventhubNamespace
    listKind: EventhubNamespaceList
    plural: eventhubnamespaces
    shortNames:
    - ehns
    singular: eventhubnamespace
  preserveUnknownFields: false
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.provisioned
      name: Provisioned
      type: string
    - jsonPath: .status.message
      name: Message
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: EventhubNamespace is the Schema for the eventhubnamespaces API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: EventhubNamespaceSpec defines the desired state of EventhubNamespace
            properties:
              location:
                description: 'INSERT ADDITIONAL SPEC FIELDS - desired state of cluster
                  Important: Run "make" to regenerate code after modifying this file'
                type: string
              networkRule:
                description: EventhubNamespaceNetworkRule defines the namespace network
                  rule
                properties:
                  defaultAction:
                    description: DefaultAction defined as a string
                    type: string
                  ipRules:
                    description: IPRules - List of IpRules
                    items:
                      properties:
                        ipMask:
                          description: IPMask - IPv4 address 1.1.1.1 or CIDR notation
                            1.1.0.0/24
                          type: string
                      type: object
                    type: array
                  virtualNetworkRules:
                    description: VirtualNetworkRules - List VirtualNetwork Rules
                    items:
                      properties:
                        ignoreMissingServiceEndpoint:
                          description: IgnoreMissingVnetServiceEndpoint - Value that
                            indicates whether to ignore missing VNet Service Endpoint
                          type: boolean
                        subnetId:
                          description: Subnet - Full Resource ID of Virtual Network
                            Subnet
                          type: string
                      type: object
                    type: array
                type: object
              properties:
                description: EventhubNamespaceProperties defines the namespace properties
                properties:
                  isAutoInflateEnabled:
                    type: boolean
                  kafkaEnabled:
                    type: boolean
                  maximumThroughputUnits:
                    format: int32
                    type: integer
                type: object
              resourceGroup:
                minLength: 1
                pattern: ^[-\w\._\(\)]+$
                type: string
              sku:
                description: EventhubNamespaceSku defines the sku
                properties:
                  capacity:
                    format: int32
                    type: integer
                  name:
                    type: string
                  tier:
                    type: string
                type: object
            required:
            - location
            - resourceGroup
            type: object
          status:
            description: ASOStatus (AzureServiceOperatorsStatus) defines the observed
              state of resource actions
            properties:
              completed:
                format: date-time
                type: string
              containsUpdate:
                type: boolean
              failedProvisioning:
                type: boolean
              flattenedSecrets:
                type: boolean
              message:
                type: string
              output:
                type: string
              pollingUrl:
                type: string
              pollingUrlKind:
                enum:
                - CreateOrUpdate
                - Delete
                type: string
              provisioned:
                type: boolean
              provisioning:
                type: boolean
              requested:
                format: date-time
                type: string
              resourceId:
                type: string
              specHash:
                type: string
              state:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: eventhubs.azure.microsoft.com
spec:
  group: azure.microsoft.com
  names:
    kind: Eventhub
    listKind: EventhubList
    plural: eventhubs
    shortNames:
    - eh
    singular: eventhub
  preserveUnknownFields: false
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.provisioned
      name: Provisioned
      type: string
    - jsonPath: .status.message
      name: Message
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Eventhub is the Schema for the eventhubs API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: EventhubSpec defines the desired state of Eventhub
            properties:
              authorizationRule:
                description: EventhubAuthorizationRule defines the name and rights
                  of the access policy
                properties:
                  name:
                    description: Name - Name of AuthorizationRule for eventhub
                    type: string
                  rights:
                    description: Rights - Rights set on the AuthorizationRule
                    items:
                      type: string
                    type: array
                type: object
              keyVaultToStoreSecrets:
                type: string
              location:
                description: 'INSERT ADDITIONAL SPEC FIELDS - desired state of cluster
                  Important: Run "make" to regenerate code after modifying this file'
                type: string
              namespace:
                type: string
              properties:
                description: EventhubProperties defines the namespace properties
                properties:
                  captureDescription:
                    description: CaptureDescription - Details specifying EventHub
                      capture to persistent storage
                    properties:
                      destination:
                        description: Destination - Resource id of the storage account
                          to be used to create the blobs
                        properties:
                          archiveNameFormat:
                            description: ArchiveNameFormat - Blob naming convention
                              for archive, e.g. {Namespace}/{EventHub}/{PartitionId}/{Year}/{Month}/{Day}/{Hour}/{Minute}/{Second}.
                              Here all the parameters (Namespace,EventHub .. etc)
                              are mandatory irrespective of order
                            type: string
                          blobContainer:
                            description: BlobContainer - Blob container Name
                            type: string
                          name:
                            description: Name - Name for capture destination
                            enum:
                            - EventHubArchive.AzureBlockBlob
                            - EventHubArchive.AzureDataLake
                            type: string
                          storageAccount:
                            description: StorageAccount - Details of the storage account
                            properties:
                              accountName:
                                description: AccountName - Name of the storage account
                                maxLength: 24
                                minLength: 3
                                pattern: ^[a-z0-9]+$
                                type: string
                              resourceGroup:
                                description: ResourceGroup - Name of the storage account
                                  resource group
                                minLength: 1
                                pattern: ^[-\w\._\(\)]+$
                                type: string
                            type: object
                        type: object
                      enabled:
                        description: Enabled - indicates whether capture is enabled
                        type: boolean
                      intervalInSeconds:
                        description: IntervalInSeconds - The time window allows you
                          to set the frequency with which the capture to Azure Blobs
                          will happen
                        format: int32
                        maximum: 900
                        minimum: 60
                        type: integer
                      sizeLimitInBytes:
                        description: SizeLimitInBytes - The size window defines the
                          amount of data built up in your Event Hub before an capture
                          operation
                        format: int32
                        maximum: 524288000
                        minimum: 10485760
                        type: integer
                    required:
                    - enabled
                    type: object
                  messageRetentionInDays:
                    description: MessageRetentionInDays - Number of days to retain
                      the events for this Event Hub, value should be 1 to 7 days
                    format: int32
                    maximum: 7
                    minimum: 1
                    type: integer
                  partitionCount:
                    description: PartitionCount - Number of partitions created for
                      the Event Hub, allowed values are from 2 to 32 partitions.
                    format: int32
                    maximum: 32
                    minimum: 2
                    type: integer
                type: object
              resourceGroup:
                minLength: 1
                pattern: ^[-\w\._\(\)]+$
                type: string
              secretName:
                description: SecretName - Used to specify the name of the secret.
                  Defaults to Event Hub name if omitted.
                type: string
            required:
            - location
            - resourceGroup
            type: object
          status:
            description: ASOStatus (AzureServiceOperatorsStatus) defines the observed
              state of resource actions
            properties:
              completed:
                format: date-time
                type: string
              containsUpdate:
                type: boolean
              failedProvisioning:
                type: boolean
              flattenedSecrets:
                type: boolean
              message:
                type: string
              output:
                type: string
              pollingUrl:
                type: string
              pollingUrlKind:
                enum:
                - CreateOrUpdate
                - Delete
                type: string
              provisioned:
                type: boolean
              provisioning:
                type: boolean
              requested:
                format: date-time
                type: string
              resourceId:
                type: string
              specHash:
                type: string
              state:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: keyvaultkeys.azure.microsoft.com
spec:
  group: azure.microsoft.com
  names:
    kind: KeyVaultKey
    listKind: KeyVaultKeyList
    plural: keyvaultkeys
    shortNames:
    - kvk
    singular: keyvaultkey
  preserveUnknownFields: false
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.provisioned
      name: Provisioned
      type: string
    - jsonPath: .status.message
      name: Message
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: KeyVaultKey is the Schema for the keyvaultkeys API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: KeyVaultKeySpec defines the desired state of KeyVaultKey
            properties:
              curve:
                description: JSONWebKeyCurveName enumerates the values for json web
                  key curve name.
                type: string
              keySize:
                format: int32
                type: integer
              keyVault:
                type: string
              location:
                description: 'INSERT ADDITIONAL SPEC FIELDS - desired state of cluster
                  Important: Run "make" to regenerate code after modifying this file'
                type: string
              operations:
                items:
                  description: JSONWebKeyOperation enumerates the values for json
                    web key operation.
                  type: string
                type: array
              resourceGroup:
                minLength: 1
                pattern: ^[-\w\._\(\)]+$
                type: string
              type:
                description: JSONWebKeyType enumerates the values for json web key
                  type.
                type: string
            required:
            - location
            - resourceGroup
            type: object
          status:
            description: ASOStatus (AzureServiceOperatorsStatus) defines the observed
              state of resource actions
            properties:
              completed:
                format: date-time
                type: string
              containsUpdate:
                type: boolean
              failedProvisioning:
                type: boolean
              flattenedSecrets:
                type: boolean
              message:
                type: string
              output:
                type: string
              pollingUrl:
                type: string
              pollingUrlKind:
                enum:
                - CreateOrUpdate
                - Delete
                type: string
              provisioned:
                type: boolean
              provisioning:
                type: boolean
              requested:
                format: date-time
                type: string
              resourceId:
                type: string
              specHash:
                type: string
              state:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: keyvaults.azure.microsoft.com
spec:
  group: azure.microsoft.com
  names:
    kind: KeyVault
    listKind: KeyVaultList
    plural: keyvaults
    shortNames:
    - kv
    singular: keyvault
  preserveUnknownFields: false
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.provisioned
      name: Provisioned
      type: string
    - jsonPath: .status.message
      name: Message
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: KeyVault is the Schema for the keyvaults API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: KeyVaultSpec defines the desired state of KeyVault
            properties:
              accessPolicies:
                items:
                  properties:
                    applicationID:
                      description: ApplicationID -  Application ID of the client making
                        request on behalf of a principal
                      type: string
                    clientID:
                      description: 'ClientID - The client ID of a user, service principal
                        or security group in the Azure Active Directory tenant for
                        the vault. The client ID must be unique for the list of access
                        policies. TODO: Remove this in a future API version, see:
                        https://github.com/Azure/azure-service-operator/issues/1351'
                      type: string
                    objectID:
                      description: ObjectID is the AAD object id of the entity to
                        provide access to.
                      type: string
                    permissions:
                      description: Permissions - Permissions the identity has for
                        keys, secrets, and certificates.
                      properties:
                        certificates:
                          items:
                            type: string
                          type: array
                        keys:
                          items:
                            type: string
                          type: array
                        secrets:
                          items:
                            type: string
                          type: array
                        storage:
                          items:
                            type: string
                          type: array
                      type: object
                    tenantID:
                      description: TenantID - The Azure Active Directory tenant ID
                        that should be used for authenticating requests to the key
                        vault.
                      type: string
                  type: object
                type: array
              enableSoftDelete:
                type: boolean
              location:
                type: string
              networkPolicies:
                properties:
                  bypass:
                    description: 'Bypass - Tells what traffic can bypass network rules.
                      This can be ''AzureServices'' or ''None''.  If not specified
                      the default is ''AzureServices''. Possible values include: ''AzureServices'',
                      ''None'''
                    type: string
                  defaultAction:
                    description: 'DefaultAction - The default action when no rule
                      from ipRules and from virtualNetworkRules match. This is only
                      used after the bypass property has been evaluated. Possible
                      values include: ''Allow'', ''Deny'''
                    type: string
                  ipRules:
                    description: IPRules - The list of IP address rules.
                    items:
                      type: string
                    type: array
                  virtualNetworkRules:
                    description: VirtualNetworkRules - The list of virtual network
                      rules.
                    items:
                      type: string
                    type: array
                type: object
              resourceGroup:
                minLength: 1
                pattern: ^[-\w\._\(\)]+$
                type: string
              sku:
                description: KeyVaultSku the SKU of the Key Vault
                properties:
                  name:
                    description: 'Name - The SKU name. Required for account creation;
                      optional for update. Possible values include: ''Premium'', `Standard`'
                    type: string
                type: object
            required:
            - location
            - resourceGroup
            type: object
          status:
            description: ASOStatus (AzureServiceOperatorsStatus) defines the observed
              state of resource actions
            properties:
              completed:
                format: date-time
                type: string
              containsUpdate:
                type: boolean
              failedProvisioning:
                type: boolean
              flattenedSecrets:
                type: boolean
              message:
                type: string
              output:
                type: string
              pollingUrl:
                type: string
              pollingUrlKind:
                enum:
                - CreateOrUpdate
                - Delete
                type: string
              provisioned:
                type: boolean
              provisioning:
                type: boolean
              requested:
                format: date-time
                type: string
              resourceId:
                type: string
              specHash:
                type: string
              state:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    cert-manager.io/inject-ca-from: azureoperator-system/azureoperator-serving-cert
    controller-gen.kubebuilder.io/version: v0.8.0
  name: mysqlaadusers.azure.microsoft.com
spec:
  conversion:
    strategy: Webhook
    webhook:
      clientConfig:
        service:
          name: azureoperator-webhook-service
          namespace: azureoperator-system
          path: /convert
      conversionReviewVersions:
      - v1beta1
  group: azure.microsoft.com
  names:
    kind: MySQLAADUser
    listKind: MySQLAADUserList
    plural: mysqlaadusers
    singular: mysqlaaduser
  preserveUnknownFields: false
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.provisioned
      name: Provisioned
      type: string
    - jsonPath: .status.message
      name: Message
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: MySQLAADUser is the Schema for an AAD user for MySQL
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: MySQLAADUserSpec defines the desired state of MySQLAADUser
            properties:
              aadId:
                description: AAD ID is the ID of the user in Azure Active Directory.
                  When creating a user for a managed identity this must be the client
                  id (sometimes called app id) of the managed identity. When creating
                  a user for a "normal" (non-managed identity) user or group, this
                  is the OID of the user or group.
                minLength: 1
                type: string
              dbName:
                minLength: 1
                type: string
              resourceGroup:
                minLength: 1
                pattern: ^[-\w\._\(\)]+$
                type: string
              roles:
                description: The roles assigned to the user. A user must have at least
                  one role.
                items:
                  type: string
                minItems: 1
                type: array
              server:
                minLength: 1
                type: string
              username:
                description: optional
                type: string
            required:
            - dbName
            - resourceGroup
            - roles
            - server
            type: object
          status:
            description: ASOStatus (AzureServiceOperatorsStatus) defines the observed
              state of resource actions
            properties:
              completed:
                format: date-time
                type: string
              containsUpdate:
                type: boolean
              failedProvisioning:
                type: boolean
              flattenedSecrets:
                type: boolean
              message:
                type: string
              output:
                type: string
              pollingUrl:
                type: string
              pollingUrlKind:
                enum:
                - CreateOrUpdate
                - Delete
                type: string
              provisioned:
                type: boolean
              provisioning:
                type: boolean
              requested:
                format: date-time
                type: string
              resourceId:
                type: string
              specHash:
                type: string
              state:
                type: string
            type: object
        type: object
    served: true
    storage: false
    subresources:
      status: {}
  - additionalPrinterColumns:
    - jsonPath: .status.provisioned
      name: Provisioned
      type: string
    - jsonPath: .status.message
      name: Message
      type: string
    name: v1alpha2
    schema:
      openAPIV3Schema:
        description: MySQLAADUser is the Schema for an AAD user for MySQL
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: MySQLAADUserSpec defines the desired state of MySQLAADUser
            properties:
              aadId:
                description: AAD ID is the ID of the user in Azure Active Directory.
                  When creating a user for a managed identity this must be the client
                  id (sometimes called app id) of the managed identity. When creating
                  a user for a "normal" (non-managed identity) user or group, this
                  is the OID of the user or group.
                minLength: 1
                type: string
              databaseRoles:
                additionalProperties:
                  items:
                    type: string
                  type: array
                description: The database-level roles assigned to the user (keyed
                  by database name).
                type: object
              resourceGroup:
                minLength: 1
                pattern: ^[-\w\._\(\)]+$
                type: string
              roles:
                description: The server-level roles assigned to the user.
                items:
                  type: string
                type: array
              server:
                minLength: 1
                type: string
              username:
                type: string
            required:
            - resourceGroup
            - roles
            - server
            type: object
          status:
            description: ASOStatus (AzureServiceOperatorsStatus) defines the observed
              state of resource actions
            properties:
              completed:
                format: date-time
                type: string
              containsUpdate:
                type: boolean
              failedProvisioning:
                type: boolean
              flattenedSecrets:
                type: boolean
              message:
                type: string
              output:
                type: string
              pollingUrl:
                type: string
              pollingUrlKind:
                enum:
                - CreateOrUpdate
                - Delete
                type: string
              provisioned:
                type: boolean
              provisioning:
                type: boolean
              requested:
                format: date-time
                type: string
              resourceId:
                type: string
              specHash:
                type: string
              state:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: mysqldatabases.azure.microsoft.com
spec:
  group: azure.microsoft.com
  names:
    kind: MySQLDatabase
    listKind: MySQLDatabaseList
    plural: mysqldatabases
    shortNames:
    - mysqldb
    singular: mysqldatabase
  preserveUnknownFields: false
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.provisioned
      name: Provisioned
      type: string
    - jsonPath: .status.message
      name: Message
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: MySQLDatabase is the Schema for the mysqldatabases API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: MySQLDatabaseSpec defines the desired state of MySQLDatabase
            properties:
              resourceGroup:
                minLength: 1
                pattern: ^[-\w\._\(\)]+$
                type: string
              server:
                type: string
            required:
            - resourceGroup
            type: object
          status:
            description: ASOStatus (AzureServiceOperatorsStatus) defines the observed
              state of resource actions
            properties:
              completed:
                format: date-time
                type: string
              containsUpdate:
                type: boolean
              failedProvisioning:
                type: boolean
              flattenedSecrets:
                type: boolean
              message:
                type: string
              output:
                type: string
              pollingUrl:
                type: string
              pollingUrlKind:
                enum:
                - CreateOrUpdate
                - Delete
                type: string
              provisioned:
                type: boolean
              provisioning:
                type: boolean
              requested:
                format: date-time
                type: string
              resourceId:
                type: string
              specHash:
                type: string
              state:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: mysqlfirewallrules.azure.microsoft.com
spec:
  group: azure.microsoft.com
  names:
    kind: MySQLFirewallRule
    listKind: MySQLFirewallRuleList
    plural: mysqlfirewallrules
    shortNames:
    - mysqlfwr
    singular: mysqlfirewallrule
  preserveUnknownFields: false
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.provisioned
      name: Provisioned
      type: string
    - jsonPath: .status.message
      name: Message
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: MySQLFirewallRule is the Schema for the mysqlfirewallrules API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: MySQLFirewallRuleSpec defines the desired state of MySQLFirewallRule
            properties:
              endIpAddress:
                type: string
              resourceGroup:
                minLength: 1
                pattern: ^[-\w\._\(\)]+$
                type: string
              server:
                type: string
              startIpAddress:
                type: string
            required:
            - endIpAddress
            - resourceGroup
            - server
            - startIpAddress
            type: object
          status:
            description: ASOStatus (AzureServiceOperatorsStatus) defines the observed
              state of resource actions
            properties:
              completed:
                format: date-time
                type: string
              containsUpdate:
                type: boolean
              failedProvisioning:
                type: boolean
              flattenedSecrets:
                type: boolean
              message:
                type: string
              output:
                type: string
              pollingUrl:
                type: string
              pollingUrlKind:
                enum:
                - CreateOrUpdate
                - Delete
                type: string
              provisioned:
                type: boolean
              provisioning:
                type: boolean
              requested:
                format: date-time
                type: string
              resourceId:
                type: string
              specHash:
                type: string
              state:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: mysqlserveradministrators.azure.microsoft.com
spec:
  group: azure.microsoft.com
  names:
    kind: MySQLServerAdministrator
    listKind: MySQLServerAdministratorList
    plural: mysqlserveradministrators
    shortNames:
    - mysqladmin
    singular: mysqlserveradministrator
  preserveUnknownFields: false
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.provisioned
      name: Provisioned
      type: string
    - jsonPath: .status.message
      name: Message
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: MySQLServerAdministrator is the Schema for the mysqlserveradministrator
          API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              administratorType:
                description: 'AdministratorType: The type of administrator.'
                enum:
                - ActiveDirectory
                type: string
              login:
                description: 'Login: The server administrator login account name.
                  For example: "myuser@microsoft.com" might be the login if specifying
                  an AAD user. "my-mi" might be the name of a managed identity'
                type: string
              resourceGroup:
                minLength: 1
                pattern: ^[-\w\._\(\)]+$
                type: string
              server:
                type: string
              sid:
                description: 'Sid: The server administrator Sid (Secure ID). If creating
                  for an AAD user or group, this is the OID of the entity in AAD.
                  For a managed identity this should be the Client ID (or app id)
                  of the identity.'
                type: string
              tenantId:
                description: 'TenantId: The server Active Directory Administrator
                  tenant id.'
                type: string
            required:
            - administratorType
            - login
            - resourceGroup
            - server
            - sid
            - tenantId
            type: object
          status:
            description: ASOStatus (AzureServiceOperatorsStatus) defines the observed
              state of resource actions
            properties:
              completed:
                format: date-time
                type: string
              containsUpdate:
                type: boolean
              failedProvisioning:
                type: boolean
              flattenedSecrets:
                type: boolean
              message:
                type: string
              output:
                type: string
              pollingUrl:
                type: string
              pollingUrlKind:
                enum:
                - CreateOrUpdate
                - Delete
                type: string
              provisioned:
                type: boolean
              provisioning:
                type: boolean
              requested:
                format: date-time
                type: string
              resourceId:
                type: string
              specHash:
                type: string
              state:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    cert-manager.io/inject-ca-from: azureoperator-system/azureoperator-serving-cert
    controller-gen.kubebuilder.io/version: v0.8.0
  name: mysqlservers.azure.microsoft.com
spec:
  conversion:
    strategy: Webhook
    webhook:
      clientConfig:
        service:
          name: azureoperator-webhook-service
          namespace: azureoperator-system
          path: /convert
      conversionReviewVersions:
      - v1beta1
  group: azure.microsoft.com
  names:
    kind: MySQLServer
    listKind: MySQLServerList
    plural: mysqlservers
    shortNames:
    - mysqls
    singular: mysqlserver
  preserveUnknownFields: false
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.provisioned
      name: Provisioned
      type: string
    - jsonPath: .status.message
      name: Message
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: MySQLServer is the Schema for the mysqlservers API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: MySQLServerSpec defines the desired state of MySQLServer
            properties:
              createMode:
                type: string
              keyVaultToStoreSecrets:
                type: string
              location:
                type: string
              replicaProperties:
                properties:
                  sourceServerId:
                    type: string
                type: object
              resourceGroup:
                minLength: 1
                pattern: ^[-\w\._\(\)]+$
                type: string
              serverVersion:
                description: ServerVersion enumerates the values for server version.
                type: string
              sku:
                properties:
                  capacity:
                    description: Capacity - The scale up/out capacity, representing
                      server's compute units.
                    format: int32
                    type: integer
                  family:
                    description: Family - The family of hardware.
                    type: string
                  name:
                    description: Name - The name of the sku, typically, tier + family
                      + cores, e.g. B_Gen4_1, GP_Gen5_8.
                    type: string
                  size:
                    description: Size - The size code, to be interpreted by resource
                      as appropriate.
                    type: string
                  tier:
                    description: 'Tier - The tier of the particular SKU, e.g. Basic.
                      Possible values include: ''Basic'', ''GeneralPurpose'', ''MemoryOptimized'''
                    type: string
                type: object
              sslEnforcement:
                type: string
            required:
            - location
            - resourceGroup
            type: object
          status:
            description: ASOStatus (AzureServiceOperatorsStatus) defines the observed
              state of resource actions
            properties:
              completed:
                format: date-time
                type: string
              containsUpdate:
                type: boolean
              failedProvisioning:
                type: boolean
              flattenedSecrets:
                type: boolean
              message:
                type: string
              output:
                type: string
              pollingUrl:
                type: string
              pollingUrlKind:
                enum:
                - CreateOrUpdate
                - Delete
                type: string
              provisioned:
                type: boolean
              provisioning:
                type: boolean
              requested:
                format: date-time
                type: string
              resourceId:
                type: string
              specHash:
                type: string
              state:
                type: string
            type: object
        type: object
    served: true
    storage: false
    subresources:
      status: {}
  - additionalPrinterColumns:
    - jsonPath: .status.provisioned
      name: Provisioned
      type: string
    - jsonPath: .status.message
      name: Message
      type: string
    name: v1alpha2
    schema:
      openAPIV3Schema:
        description: MySQLServer is the Schema for the mysqlservers API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: MySQLServerSpec defines the desired state of MySQLServer
            properties:
              adminSecret:
                description: AdminSecret is the name of a Kubernetes secret containing
                  the username and password of the MySQLServer administrator account.
                  When specified, the `username` and `password` fields of this secret
                  will be included in the generated secret associated with this MySQLServer.
                  If AdminSecret is specified but a secret with the given name is
                  not found in the same namespace as the MySQLServer, then reconciliation
                  will block until the secret is created. If this is not specified,
                  a username and password will be automatically generated.
                minLength: 1
                type: string
              createMode:
                type: string
              keyVaultToStoreSecrets:
                type: string
              location:
                type: string
              replicaProperties:
                properties:
                  sourceServerId:
                    type: string
                type: object
              resourceGroup:
                minLength: 1
                pattern: ^[-\w\._\(\)]+$
                type: string
              serverVersion:
                description: ServerVersion enumerates the values for server version.
                type: string
              sku:
                properties:
                  capacity:
                    description: Capacity - The scale up/out capacity, representing
                      server's compute units.
                    format: int32
                    type: integer
                  family:
                    description: Family - The family of hardware.
                    type: string
                  name:
                    description: Name - The name of the sku, typically, tier + family
                      + cores, e.g. B_Gen4_1, GP_Gen5_8.
                    type: string
                  size:
                    description: Size - The size code, to be interpreted by resource
                      as appropriate.
                    type: string
                  tier:
                    description: 'Tier - The tier of the particular SKU, e.g. Basic.
                      Possible values include: ''Basic'', ''GeneralPurpose'', ''MemoryOptimized'''
                    enum:
                    - Basic
                    - GeneralPurpose
                    - MemoryOptimized
                    type: string
                type: object
              sslEnforcement:
                enum:
                - Enabled
                - Disabled
                type: string
              storageProfile:
                properties:
                  backupRetentionDays:
                    description: BackupRetentionDays - Backup retention days for the
                      server.
                    format: int32
                    type: integer
                  geoRedundantBackup:
                    description: 'GeoRedundantBackup - Enable Geo-redundant or not
                      for server backup. Possible values include: ''Enabled'', ''Disabled'''
                    type: string
                  storageAutogrow:
                    description: 'StorageAutogrow - Enable Storage Auto Grow. Possible
                      values include: ''Enabled'', ''Disabled'''
                    enum:
                    - Enabled
                    - Disabled
                    type: string
                  storageMB:
                    description: StorageMB - Max storage allowed for a server.
                    format: int32
                    type: integer
                type: object
            required:
            - location
            - resourceGroup
            type: object
          status:
            description: ASOStatus (AzureServiceOperatorsStatus) defines the observed
              state of resource actions
            properties:
              completed:
                format: date-time
                type: string
              containsUpdate:
                type: boolean
              failedProvisioning:
                type: boolean
              flattenedSecrets:
                type: boolean
              message:
                type: string
              output:
                type: string
              pollingUrl:
                type: string
              pollingUrlKind:
                enum:
                - CreateOrUpdate
                - Delete
                type: string
              provisioned:
                type: boolean
              provisioning:
                type: boolean
              requested:
                format: date-time
                type: string
              resourceId:
                type: string
              specHash:
                type: string
              state:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    cert-manager.io/inject-ca-from: azureoperator-system/azureoperator-serving-cert
    controller-gen.kubebuilder.io/version: v0.8.0
  name: mysqlusers.azure.microsoft.com
spec:
  conversion:
    strategy: Webhook
    webhook:
      clientConfig:
        service:
          name: azureoperator-webhook-service
          namespace: azureoperator-system
          path: /convert
      conversionReviewVersions:
      - v1beta1
  group: azure.microsoft.com
  names:
    kind: MySQLUser
    listKind: MySQLUserList
    plural: mysqlusers
    singular: mysqluser
  preserveUnknownFields: false
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.provisioned
      name: Provisioned
      type: string
    - jsonPath: .status.message
      name: Message
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: MySQLUser is the Schema for the mysqlusers API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: MySQLUserSpec defines the desired state of MySqlUser
            properties:
              adminSecret:
                description: optional
                type: string
              adminSecretKeyVault:
                type: string
              dbName:
                type: string
              keyVaultToStoreSecrets:
                type: string
              resourceGroup:
                minLength: 1
                pattern: ^[-\w\._\(\)]+$
                type: string
              roles:
                items:
                  type: string
                type: array
              server:
                description: 'INSERT ADDITIONAL SPEC FIELDS - desired state of cluster
                  Important: Run "make" to regenerate code after modifying this file'
                type: string
              username:
                type: string
            required:
            - dbName
            - resourceGroup
            - roles
            - server
            type: object
          status:
            description: ASOStatus (AzureServiceOperatorsStatus) defines the observed
              state of resource actions
            properties:
              completed:
                format: date-time
                type: string
              containsUpdate:
                type: boolean
              failedProvisioning:
                type: boolean
              flattenedSecrets:
                type: boolean
              message:
                type: string
              output:
                type: string
              pollingUrl:
                type: string
              pollingUrlKind:
                enum:
                - CreateOrUpdate
                - Delete
                type: string
              provisioned:
                type: boolean
              provisioning:
                type: boolean
              requested:
                format: date-time
                type: string
              resourceId:
                type: string
              specHash:
                type: string
              state:
                type: string
            type: object
        type: object
    served: true
    storage: false
    subresources:
      status: {}
  - additionalPrinterColumns:
    - jsonPath: .status.provisioned
      name: Provisioned
      type: string
    - jsonPath: .status.message
      name: Message
      type: string
    name: v1alpha2
    schema:
      openAPIV3Schema:
        description: MySQLUser is the Schema for the mysqlusers API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: MySQLUserSpec defines the desired state of MySqlUser
            properties:
              adminSecret:
                type: string
              adminSecretKeyVault:
                type: string
              databaseRoles:
                additionalProperties:
                  items:
                    type: string
                  type: array
                description: The database-level roles assigned to the user (keyed
                  by database name).
                type: object
              keyVaultToStoreSecrets:
                type: string
              resourceGroup:
                minLength: 1
                pattern: ^[-\w\._\(\)]+$
                type: string
              roles:
                description: The server-level roles assigned ot the user.
                items:
                  type: string
                type: array
              server:
                description: 'INSERT ADDITIONAL SPEC FIELDS - desired state of cluster
                  Important: Run "make" to regenerate code after modifying this file'
                minLength: 1
                type: string
              username:
                type: string
            required:
            - resourceGroup
            - server
            type: object
          status:
            description: ASOStatus (AzureServiceOperatorsStatus) defines the observed
              state of resource actions
            properties:
              completed:
                format: date-time
                type: string
              containsUpdate:
                type: boolean
              failedProvisioning:
                type: boolean
              flattenedSecrets:
                type: boolean
              message:
                type: string
              output:
                type: string
              pollingUrl:
                type: string
              pollingUrlKind:
                enum:
                - CreateOrUpdate
                - Delete
                type: string
              provisioned:
                type: boolean
              provisioning:
                type: boolean
              requested:
                format: date-time
                type: string
              resourceId:
                type: string
              specHash:
                type: string
              state:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: mysqlvnetrules.azure.microsoft.com
spec:
  group: azure.microsoft.com
  names:
    kind: MySQLVNetRule
    listKind: MySQLVNetRuleList
    plural: mysqlvnetrules
    shortNames:
    - mysqlvnr
    singular: mysqlvnetrule
  preserveUnknownFields: false
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.provisioned
      name: Provisioned
      type: string
    - jsonPath: .status.message
      name: Message
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: MySQLVNetRule is the Schema for the mysqlvnetrules API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: MySQLVNetRuleSpec defines the desired state of MySQLVNetRule
            properties:
              ignoreMissingServiceEndpoint:
                type: boolean
              resourceGroup:
                description: 'INSERT ADDITIONAL SPEC FIELDS - desired state of cluster
                  Important: Run "make" to regenerate code after modifying this file'
                minLength: 1
                pattern: ^[-\w\._\(\)]+$
                type: string
              server:
                type: string
              subnetName:
                type: string
              vNetName:
                type: string
              vNetResourceGroup:
                type: string
              vNetSubscriptionID:
                type: string
            required:
            - resourceGroup
            - server
            - subnetName
            - vNetName
            - vNetResourceGroup
            type: object
          status:
            description: ASOStatus (AzureServiceOperatorsStatus) defines the observed
              state of resource actions
            properties:
              completed:
                format: date-time
                type: string
              containsUpdate:
                type: boolean
              failedProvisioning:
                type: boolean
              flattenedSecrets:
                type: boolean
              message:
                type: string
              output:
                type: string
              pollingUrl:
                type: string
              pollingUrlKind:
                enum:
                - CreateOrUpdate
                - Delete
                type: string
              provisioned:
                type: boolean
              provisioning:
                type: boolean
              requested:
                format: date-time
                type: string
              resourceId:
                type: string
              specHash:
                type: string
              state:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: postgresqldatabases.azure.microsoft.com
spec:
  group: azure.microsoft.com
  names:
    kind: PostgreSQLDatabase
    listKind: PostgreSQLDatabaseList
    plural: postgresqldatabases
    shortNames:
    - psqldb
    singular: postgresqldatabase
  preserveUnknownFields: false
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.provisioned
      name: Provisioned
      type: string
    - jsonPath: .status.message
      name: Message
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: PostgreSQLDatabase is the Schema for the postgresqldatabases
          API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: PostgreSQLDatabaseSpec defines the desired state of PostgreSQLDatabase
            properties:
              resourceGroup:
                description: 'INSERT ADDITIONAL SPEC FIELDS - desired state of cluster
                  Important: Run "make" to regenerate code after modifying this file'
                minLength: 1
                pattern: ^[-\w\._\(\)]+$
                type: string
              server:
                type: string
            required:
            - resourceGroup
            - server
            type: object
          status:
            description: ASOStatus (AzureServiceOperatorsStatus) defines the observed
              state of resource actions
            properties:
              completed:
                format: date-time
                type: string
              containsUpdate:
                type: boolean
              failedProvisioning:
                type: boolean
              flattenedSecrets:
                type: boolean
              message:
                type: string
              output:
                type: string
              pollingUrl:
                type: string
              pollingUrlKind:
                enum:
                - CreateOrUpdate
                - Delete
                type: string
              provisioned:
                type: boolean
              provisioning:
                type: boolean
              requested:
                format: date-time
                type: string
              resourceId:
                type: string
              specHash:
                type: string
              state:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: postgresqlfirewallrules.azure.microsoft.com
spec:
  group: azure.microsoft.com
  names:
    kind: PostgreSQLFirewallRule
    listKind: PostgreSQLFirewallRuleList
    plural: postgresqlfirewallrules
    shortNames:
    - psqlfwr
    singular: postgresqlfirewallrule
  preserveUnknownFields: false
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.provisioned
      name: Provisioned
      type: string
    - jsonPath: .status.message
      name: Message
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: PostgreSQLFirewallRule is the Schema for the postgresqlfirewallrules
          API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: PostgreSQLFirewallRuleSpec defines the desired state of PostgreSQLFirewallRule
            properties:
              endIpAddress:
                type: string
              resourceGroup:
                description: 'INSERT ADDITIONAL SPEC FIELDS - desired state of cluster
                  Important: Run "make" to regenerate code after modifying this file'
                minLength: 1
                pattern: ^[-\w\._\(\)]+$
                type: string
              server:
                type: string
              startIpAddress:
                type: string
            required:
            - endIpAddress
            - resourceGroup
            - server
            - startIpAddress
            type: object
          status:
            description: ASOStatus (AzureServiceOperatorsStatus) defines the observed
              state of resource actions
            properties:
              completed:
                format: date-time
                type: string
              containsUpdate:
                type: boolean
              failedProvisioning:
                type: boolean
              flattenedSecrets:
                type: boolean
              message:
                type: string
              output:
                type: string
              pollingUrl:
                type: string
              pollingUrlKind:
                enum:
                - CreateOrUpdate
                - Delete
                type: string
              provisioned:
                type: boolean
              provisioning:
                type: boolean
              requested:
                format: date-time
                type: string
              resourceId:
                type: string
              specHash:
                type: string
              state:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    cert-manager.io/inject-ca-from: azureoperator-system/azureoperator-serving-cert
    controller-gen.kubebuilder.io/version: v0.8.0
  name: postgresqlservers.azure.microsoft.com
spec:
  conversion:
    strategy: Webhook
    webhook:
      clientConfig:
        service:
          name: azureoperator-webhook-service
          namespace: azureoperator-system
          path: /convert
      conversionReviewVersions:
      - v1beta1
  group: azure.microsoft.com
  names:
    kind: PostgreSQLServer
    listKind: PostgreSQLServerList
    plural: postgresqlservers
    shortNames:
    - psqls
    singular: postgresqlserver
  preserveUnknownFields: false
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.provisioned
      name: Provisioned
      type: string
    - jsonPath: .status.message
      name: Message
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: PostgreSQLServer is the Schema for the postgresqlservers API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: PostgreSQLServerSpec defines the desired state of PostgreSQLServer
            properties:
              createMode:
                type: string
              keyVaultToStoreSecrets:
                type: string
              location:
                type: string
              replicaProperties:
                properties:
                  sourceServerId:
                    type: string
                type: object
              resourceGroup:
                minLength: 1
                pattern: ^[-\w\._\(\)]+$
                type: string
              serverVersion:
                description: ServerVersion enumerates the values for server version.
                type: string
              sku:
                properties:
                  capacity:
                    description: Capacity - The scale up/out capacity, representing
                      server's compute units.
                    format: int32
                    type: integer
                  family:
                    description: Family - The family of hardware.
                    type: string
                  name:
                    description: Name - The name of the sku, typically, tier + family
                      + cores, e.g. B_Gen4_1, GP_Gen5_8.
                    type: string
                  size:
                    description: Size - The size code, to be interpreted by resource
                      as appropriate.
                    type: string
                  tier:
                    description: 'Tier - The tier of the particular SKU, e.g. Basic.
                      Possible values include: ''Basic'', ''GeneralPurpose'', ''MemoryOptimized'''
                    type: string
                type: object
              sslEnforcement:
                type: string
            required:
            - location
            - resourceGroup
            type: object
          status:
            description: ASOStatus (AzureServiceOperatorsStatus) defines the observed
              state of resource actions
            properties:
              completed:
                format: date-time
                type: string
              containsUpdate:
                type: boolean
              failedProvisioning:
                type: boolean
              flattenedSecrets:
                type: boolean
              message:
                type: string
              output:
                type: string
              pollingUrl:
                type: string
              pollingUrlKind:
                enum:
                - CreateOrUpdate
                - Delete
                type: string
              provisioned:
                type: boolean
              provisioning:
                type: boolean
              requested:
                format: date-time
                type: string
              resourceId:
                type: string
              specHash:
                type: string
              state:
                type: string
            type: object
        type: object
    served: true
    storage: false
    subresources:
      status: {}
  - additionalPrinterColumns:
    - jsonPath: .status.provisioned
      name: Provisioned
      type: string
    - jsonPath: .status.message
      name: Message
      type: string
    name: v1alpha2
    schema:
      openAPIV3Schema:
        description: PostgreSQLServer is the Schema for the postgresqlservers API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: PostgreSQLServerSpec defines the desired state of PostgreSQLServer
            properties:
              createMode:
                type: string
              keyVaultToStoreSecrets:
                type: string
              location:
                type: string
              replicaProperties:
                properties:
                  sourceServerId:
                    type: string
                type: object
              resourceGroup:
                minLength: 1
                pattern: ^[-\w\._\(\)]+$
                type: string
              serverVersion:
                description: ServerVersion enumerates the values for server version.
                type: string
              sku:
                properties:
                  capacity:
                    description: Capacity - The scale up/out capacity, representing
                      server's compute units.
                    format: int32
                    type: integer
                  family:
                    description: Family - The family of hardware.
                    type: string
                  name:
                    description: Name - The name of the sku, typically, tier + family
                      + cores, e.g. B_Gen4_1, GP_Gen5_8.
                    type: string
                  size:
                    description: Size - The size code, to be interpreted by resource
                      as appropriate.
                    type: string
                  tier:
                    description: 'Tier - The tier of the particular SKU, e.g. Basic.
                      Possible values include: ''Basic'', ''GeneralPurpose'', ''MemoryOptimized'''
                    enum:
                    - Basic
                    - GeneralPurpose
                    - MemoryOptimized
                    type: string
                type: object
              sslEnforcement:
                enum:
                - Enabled
                - Disabled
                type: string
              storageProfile:
                properties:
                  backupRetentionDays:
                    description: BackupRetentionDays - Backup retention days for the
                      server.
                    format: int32
                    type: integer
                  geoRedundantBackup:
                    description: 'GeoRedundantBackup - Enable Geo-redundant or not
                      for server backup. Possible values include: ''Enabled'', ''Disabled'''
                    type: string
                  storageAutogrow:
                    description: 'StorageAutogrow - Enable Storage Auto Grow. Possible
                      values include: ''Enabled'', ''Disabled'''
                    enum:
                    - Enabled
                    - Disabled
                    type: string
                  storageMB:
                    description: StorageMB - Max storage allowed for a server.
                    format: int32
                    type: integer
                type: object
            required:
            - location
            - resourceGroup
            type: object
          status:
            description: ASOStatus (AzureServiceOperatorsStatus) defines the observed
              state of resource actions
            properties:
              completed:
                format: date-time
                type: string
              containsUpdate:
                type: boolean
              failedProvisioning:
                type: boolean
              flattenedSecrets:
                type: boolean
              message:
                type: string
              output:
                type: string
              pollingUrl:
                type: string
              pollingUrlKind:
                enum:
                - CreateOrUpdate
                - Delete
                type: string
              provisioned:
                type: boolean
              provisioning:
                type: boolean
              requested:
                format: date-time
                type: string
              resourceId:
                type: string
              specHash:
                type: string
              state:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: postgresqlusers.azure.microsoft.com
spec:
  group: azure.microsoft.com
  names:
    kind: PostgreSQLUser
    listKind: PostgreSQLUserList
    plural: postgresqlusers
    shortNames:
    - psqlu
    singular: postgresqluser
  preserveUnknownFields: false
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.provisioned
      name: Provisioned
      type: string
    - jsonPath: .status.message
      name: Message
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: PostgreSQLUser is the Schema for the postgresqlusers API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: PostgreSQLUserSpec defines the desired state of PostgreSqlUser
            properties:
              adminSecret:
                description: optional
                type: string
              adminSecretKeyVault:
                type: string
              dbName:
                type: string
              keyVaultToStoreSecrets:
                type: string
              resourceGroup:
                minLength: 1
                pattern: ^[-\w\._\(\)]+$
                type: string
              roles:
                items:
                  type: string
                type: array
              server:
                description: 'INSERT ADDITIONAL SPEC FIELDS - desired state of cluster
                  Important: Run "make" to regenerate code after modifying this file'
                type: string
              username:
                type: string
            required:
            - dbName
            - resourceGroup
            - roles
            - server
            type: object
          status:
            description: ASOStatus (AzureServiceOperatorsStatus) defines the observed
              state of resource actions
            properties:
              completed:
                format: date-time
                type: string
              containsUpdate:
                type: boolean
              failedProvisioning:
                type: boolean
              flattenedSecrets:
                type: boolean
              message:
                type: string
              output:
                type: string
              pollingUrl:
                type: string
              pollingUrlKind:
                enum:
                - CreateOrUpdate
                - Delete
                type: string
              provisioned:
                type: boolean
              provisioning:
                type: boolean
              requested:
                format: date-time
                type: string
              resourceId:
                type: string
              specHash:
                type: string
              state:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: postgresqlvnetrules.azure.microsoft.com
spec:
  group: azure.microsoft.com
  names:
    kind: PostgreSQLVNetRule
    listKind: PostgreSQLVNetRuleList
    plural: postgresqlvnetrules
    shortNames:
    - psqlvnr
    singular: postgresqlvnetrule
  preserveUnknownFields: false
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.provisioned
      name: Provisioned
      type: string
    - jsonPath: .status.message
      name: Message
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: PostgreSQLVNetRule is the Schema for the PostgreSQLVNetRules
          API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: PotgreSQLVNetRuleSpec defines the desired state of PostgreSQLVNetRule
            properties:
              ignoreMissingServiceEndpoint:
                type: boolean
              resourceGroup:
                description: 'INSERT ADDITIONAL SPEC FIELDS - desired state of cluster
                  Important: Run "make" to regenerate code after modifying this file'
                minLength: 1
                pattern: ^[-\w\._\(\)]+$
                type: string
              server:
                type: string
              subnetName:
                type: string
              vNetName:
                type: string
              vNetResourceGroup:
                type: string
              vNetSubscriptionID:
                type: string
            required:
            - resourceGroup
            - server
            - subnetName
            - vNetName
            - vNetResourceGroup
            type: object
          status:
            description: ASOStatus (AzureServiceOperatorsStatus) defines the observed
              state of resource actions
            properties:
              completed:
                format: date-time
                type: string
              containsUpdate:
                type: boolean
              failedProvisioning:
                type: boolean
              flattenedSecrets:
                type: boolean
              message:
                type: string
              output:
                type: string
              pollingUrl:
                type: string
              pollingUrlKind:
                enum:
                - CreateOrUpdate
                - Delete
                type: string
              provisioned:
                type: boolean
              provisioning:
                type: boolean
              requested:
                format: date-time
                type: string
              resourceId:
                type: string
              specHash:
                type: string
              state:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: rediscacheactions.azure.microsoft.com
spec:
  group: azure.microsoft.com
  names:
    kind: RedisCacheAction
    listKind: RedisCacheActionList
    plural: rediscacheactions
    shortNames:
    - rca
    singular: rediscacheaction
  preserveUnknownFields: false
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.provisioned
      name: Provisioned
      type: string
    - jsonPath: .status.message
      name: Message
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: RedisCacheAction is the Schema for the rediscacheactions API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: RedisCacheActionSpec defines the desired state of RedisCacheAction
            properties:
              actionName:
                enum:
                - rollallkeys
                - rollprimarykey
                - rollsecondarykey
                - rebootallnodes
                - rebootprimarynode
                - rebootsecondarynode
                type: string
              cacheName:
                type: string
              keyVaultToStoreSecrets:
                type: string
              resourceGroup:
                minLength: 1
                pattern: ^[-\w\._\(\)]+$
                type: string
              secretName:
                type: string
              shardID:
                format: int32
                type: integer
            required:
            - actionName
            - cacheName
            - resourceGroup
            type: object
          status:
            description: ASOStatus (AzureServiceOperatorsStatus) defines the observed
              state of resource actions
            properties:
              completed:
                format: date-time
                type: string
              containsUpdate:
                type: boolean
              failedProvisioning:
                type: boolean
              flattenedSecrets:
                type: boolean
              message:
                type: string
              output:
                type: string
              pollingUrl:
                type: string
              pollingUrlKind:
                enum:
                - CreateOrUpdate
                - Delete
                type: string
              provisioned:
                type: boolean
              provisioning:
                type: boolean
              requested:
                format: date-time
                type: string
              resourceId:
                type: string
              specHash:
                type: string
              state:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: rediscachefirewallrules.azure.microsoft.com
spec:
  group: azure.microsoft.com
  names:
    kind: RedisCacheFirewallRule
    listKind: RedisCacheFirewallRuleList
    plural: rediscachefirewallrules
    shortNames:
    - rcfwr
    singular: rediscachefirewallrule
  preserveUnknownFields: false
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.provisioned
      name: Provisioned
      type: string
    - jsonPath: .status.message
      name: Message
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: RedisCacheFirewallRule is the Schema for the rediscachefirewallrules
          API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: RedisCacheFirewallRuleSpec defines the desired state of RedisCacheFirewallRule
            properties:
              properties:
                description: RedisCacheFirewallRuleProperties the parameters of the
                  RedisCacheFirewallRule
                properties:
                  endIP:
                    type: string
                  startIP:
                    type: string
                required:
                - endIP
                - startIP
                type: object
              redisCache:
                type: string
              resourceGroup:
                minLength: 1
                pattern: ^[-\w\._\(\)]+$
                type: string
            required:
            - properties
            - redisCache
            - resourceGroup
            type: object
          status:
            description: ASOStatus (AzureServiceOperatorsStatus) defines the observed
              state of resource actions
            properties:
              completed:
                format: date-time
                type: string
              containsUpdate:
                type: boolean
              failedProvisioning:
                type: boolean
              flattenedSecrets:
                type: boolean
              message:
                type: string
              output:
                type: string
              pollingUrl:
                type: string
              pollingUrlKind:
                enum:
                - CreateOrUpdate
                - Delete
                type: string
              provisioned:
                type: boolean
              provisioning:
                type: boolean
              requested:
                format: date-time
                type: string
              resourceId:
                type: string
              specHash:
                type: string
              state:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: rediscaches.azure.microsoft.com
spec:
  group: azure.microsoft.com
  names:
    kind: RedisCache
    listKind: RedisCacheList
    plural: rediscaches
    shortNames:
    - rc
    singular: rediscache
  preserveUnknownFields: false
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.provisioned
      name: Provisioned
      type: string
    - jsonPath: .status.message
      name: Message
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: RedisCache is the Schema for the rediscaches API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: RedisCacheSpec defines the desired state of RedisCache
            properties:
              keyVaultToStoreSecrets:
                type: string
              location:
                minLength: 0
                type: string
              properties:
                description: RedisCacheProperties the properties of the Redis Cache.
                properties:
                  configuration:
                    additionalProperties:
                      type: string
                    type: object
                  enableNonSslPort:
                    type: boolean
                  shardCount:
                    format: int32
                    type: integer
                  sku:
                    description: RedisCacheSku the SKU of the Redis Cache.
                    properties:
                      capacity:
                        format: int32
                        type: integer
                      family:
                        type: string
                      name:
                        description: 'Name - The SKU name. Required for account creation;
                          optional for update. Possible values include: ''StandardLRS'',
                          ''StandardGRS'', ''StandardRAGRS'', ''StandardZRS'', ''PremiumLRS'',
                          ''PremiumZRS'', ''StandardGZRS'', ''StandardRAGZRS'''
                        type: string
                    type: object
                  staticIp:
                    type: string
                  subnetId:
                    type: string
                type: object
              resourceGroup:
                minLength: 1
                pattern: ^[-\w\._\(\)]+$
                type: string
              secretName:
                type: string
            required:
            - resourceGroup
            type: object
          status:
            description: ASOStatus (AzureServiceOperatorsStatus) defines the observed
              state of resource actions
            properties:
              completed:
                format: date-time
                type: string
              containsUpdate:
                type: boolean
              failedProvisioning:
                type: boolean
              flattenedSecrets:
                type: boolean
              message:
                type: string
              output:
                type: string
              pollingUrl:
                type: string
              pollingUrlKind:
                enum:
                - CreateOrUpdate
                - Delete
                type: string
              provisioned:
                type: boolean
              provisioning:
                type: boolean
              requested:
                format: date-time
                type: string
              resourceId:
                type: string
              specHash:
                type: string
              state:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: resourcegroups.azure.microsoft.com
spec:
  group: azure.microsoft.com
  names:
    kind: ResourceGroup
    listKind: ResourceGroupList
    plural: resourcegroups
    shortNames:
    - rg
    singular: resourcegroup
  preserveUnknownFields: false
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.provisioned
      name: Provisioned
      type: string
    - jsonPath: .status.message
      name: Message
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: ResourceGroup is the Schema for the resourcegroups API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ResourceGroupSpec defines the desired state of ResourceGroup
            properties:
              location:
                description: 'INSERT ADDITIONAL SPEC FIELDS - desired state of cluster
                  Important: Run "make" to regenerate code after modifying this file'
                type: string
            required:
            - location
            type: object
          status:
            description: ASOStatus (AzureServiceOperatorsStatus) defines the observed
              state of resource actions
            properties:
              completed:
                format: date-time
                type: string
              containsUpdate:
                type: boolean
              failedProvisioning:
                type: boolean
              flattenedSecrets:
                type: boolean
              message:
                type: string
              output:
                type: string
              pollingUrl:
                type: string
              pollingUrlKind:
                enum:
                - CreateOrUpdate
                - Delete
                type: string
              provisioned:
                type: boolean
              provisioning:
                type: boolean
              requested:
                format: date-time
                type: string
              resourceId:
                type: string
              specHash:
                type: string
              state:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: storageaccounts.azure.microsoft.com
spec:
  group: azure.microsoft.com
  names:
    kind: StorageAccount
    listKind: StorageAccountList
    plural: storageaccounts
    shortNames:
    - sacct
    singular: storageaccount
  preserveUnknownFields: false
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.provisioned
      name: Provisioned
      type: string
    - jsonPath: .status.message
      name: Message
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: StorageAccount is the Schema for the storages API
        properties:
          additionalResources:
            description: StorageAccountAdditionalResources holds the additional resources
            properties:
              secrets:
                items:
                  type: string
                type: array
            type: object
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          output:
            description: StorageAccountOutput is the object that contains the output
              from creating a Storage Account object
            properties:
              connectionString1:
                type: string
              connectionString2:
                type: string
              key1:
                type: string
              key2:
                type: string
              storageAccountName:
                type: string
            type: object
          spec:
            description: StorageAccountSpec defines the desired state of Storage
            properties:
              accessTier:
                description: StorageAccountAccessTier enumerates the values for access
                  tier. Only one of the following access tiers may be specified. If
                  none of the following access tiers is specified, the default one
                  is Hot.
                enum:
                - Cool
                - Hot
                type: string
              dataLakeEnabled:
                type: boolean
              kind:
                description: StorageAccountKind enumerates the values for kind. Only
                  one of the following kinds may be specified. If none of the following
                  kinds is specified, the default one is StorageV2.
                enum:
                - BlobStorage
                - BlockBlobStorage
                - FileStorage
                - Storage
                - StorageV2
                type: string
              location:
                minLength: 0
                type: string
              networkRule:
                properties:
                  bypass:
                    description: 'Bypass - Specifies whether traffic is bypassed for
                      Logging/Metrics/AzureServices. Possible values are any combination
                      of Logging|Metrics|AzureServices (For example, "Logging, Metrics"),
                      or None to bypass none of those traffics. Possible values include:
                      ''None'', ''Logging'', ''Metrics'', ''AzureServices'''
                    type: string
                  defaultAction:
                    description: 'DefaultAction - Specifies the default action of
                      allow or deny when no other rules match. Possible values include:
                      ''DefaultActionAllow'', ''DefaultActionDeny'''
                    type: string
                  ipRules:
                    description: IPRules - Sets the IP ACL rules
                    items:
                      properties:
                        ipAddressOrRange:
                          description: IPAddressOrRange - Specifies the IP or IP range
                            in CIDR format. Only IPV4 address is allowed.
                          type: string
                      type: object
                    type: array
                  virtualNetworkRules:
                    description: VirtualNetworkRules - Sets the virtual network rules
                    items:
                      properties:
                        subnetId:
                          description: 'SubnetId - Resource ID of a subnet, for example:
                            /subscriptions/{subscriptionId}/resourceGroups/{groupName}/providers/Microsoft.Network/virtualNetworks/{vnetName}/subnets/{subnetName}.'
                          type: string
                      type: object
                    type: array
                type: object
              resourceGroup:
                minLength: 1
                pattern: ^[-\w\._\(\)]+$
                type: string
              sku:
                description: StorageAccountSku the SKU of the storage account.
                properties:
                  name:
                    description: 'Name - The SKU name. Required for account creation;
                      optional for update. Possible values include: ''Standard_LRS'',
                      ''Standard_GRS'', ''Standard_RAGRS'', ''Standard_ZRS'', ''Premium_LRS'',
                      ''Premium_ZRS'', ''Standard_GZRS'', ''Standard_RAGZRS''. For
                      the full list of allowed options, see: https://docs.microsoft.com/en-us/rest/api/storagerp/storageaccounts/create#skuname'
                    enum:
                    - Premium_LRS
                    - Premium_ZRS
                    - Standard_GRS
                    - Standard_GZRS
                    - Standard_LRS
                    - Standard_RAGRS
                    - Standard_RAGZRS
                    - Standard_ZRS
                    type: string
                type: object
              supportsHttpsTrafficOnly:
                type: boolean
            required:
            - resourceGroup
            type: object
          status:
            description: ASOStatus (AzureServiceOperatorsStatus) defines the observed
              state of resource actions
            properties:
              completed:
                format: date-time
                type: string
              containsUpdate:
                type: boolean
              failedProvisioning:
                type: boolean
              flattenedSecrets:
                type: boolean
              message:
                type: string
              output:
                type: string
              pollingUrl:
                type: string
              pollingUrlKind:
                enum:
                - CreateOrUpdate
                - Delete
                type: string
              provisioned:
                type: boolean
              provisioning:
                type: boolean
              requested:
                format: date-time
                type: string
              resourceId:
                type: string
              specHash:
                type: string
              state:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: virtualnetworks.azure.microsoft.com
spec:
  group: azure.microsoft.com
  names:
    kind: VirtualNetwork
    listKind: VirtualNetworkList
    plural: virtualnetworks
    shortNames:
    - vn
    singular: virtualnetwork
  preserveUnknownFields: false
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.provisioned
      name: Provisioned
      type: string
    - jsonPath: .status.message
      name: Message
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: VirtualNetwork is the Schema for the virtualnetworks API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: VirtualNetworkSpec defines the desired state of VirtualNetwork
            properties:
              addressSpace:
                type: string
              location:
                description: 'INSERT ADDITIONAL SPEC FIELDS - desired state of cluster
                  Important: Run "make" to regenerate code after modifying this file'
                type: string
              resourceGroup:
                minLength: 1
                pattern: ^[-\w\._\(\)]+$
                type: string
              subnets:
                items:
                  description: VNetSubnets defines subnets for this vnet
                  properties:
                    serviceEndpoints:
                      items:
                        type: string
                      type: array
                    subnetAddressPrefix:
                      type: string
                    subnetName:
                      description: 'INSERT ADDITIONAL STATUS FIELD - define observed
                        state of cluster Important: Run "make" to regenerate code
                        after modifying this file'
                      type: string
                  required:
                  - subnetAddressPrefix
                  - subnetName
                  type: object
                type: array
            required:
            - addressSpace
            - location
            - resourceGroup
            type: object
          status:
            description: ASOStatus (AzureServiceOperatorsStatus) defines the observed
              state of resource actions
            properties:
              completed:
                format: date-time
                type: string
              containsUpdate:
                type: boolean
              failedProvisioning:
                type: boolean
              flattenedSecrets:
                type: boolean
              message:
                type: string
              output:
                type: string
              pollingUrl:
                type: string
              pollingUrlKind:
                enum:
                - CreateOrUpdate
                - Delete
                type: string
              provisioned:
                type: boolean
              provisioning:
                type: boolean
              requested:
                format: date-time
                type: string
              resourceId:
                type: string
              specHash:
                type: string
              state:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: azureoperator-leader-election-role
  namespace: azureoperator-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - configmaps/status
  verbs:
  - get
  - update
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  name: azureoperator-manager-role
rules:
- apiGroups:
  - aadpodidentity.k8s.io
  resources:
  - azureassignedidentities
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - aadpodidentity.k8s.io
  resources:
  - azureassignedidentities/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - aadpodidentity.k8s.io
  resources:
  - azureidentities
  - azureidentities/status
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - aadpodidentity.k8s.io
  resources:
  - azureidentitybindings
  - azureidentitybindings/status
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apps
  resources:
  - deployments
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - apps
  resources:
  - deployments/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - azure.microsoft.com
  resources:
  - apimgmtapis
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - azure.microsoft.com
  resources:
  - apimgmtapis/finalizers
  - apimgmtapis/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - azure.microsoft.com
  resources:
  - apimservices
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - azure.microsoft.com
  resources:
  - apimservices/finalizers
  - apimservices/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - azure.microsoft.com
  resources:
  - appinsights
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - azure.microsoft.com
  resources:
  - appinsights/finalizers
  - appinsights/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - azure.microsoft.com
  resources:
  - appinsightsapikeys
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - azure.microsoft.com
  resources:
  - appinsightsapikeys/finalizers
  - appinsightsapikeys/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - azure.microsoft.com
  resources:
  - azureloadbalancers
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - azure.microsoft.com
  resources:
  - azureloadbalancers/finalizers
  - azureloadbalancers/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - azure.microsoft.com
  resources:
  - azurenetworkinterfaces
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - azure.microsoft.com
  resources:
  - azurenetworkinterfaces/finalizers
  - azurenetworkinterfaces/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - azure.microsoft.com
  resources:
  - azurepublicipaddresses
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - azure.microsoft.com
  resources:
  - azurepublicipaddresses/finalizers
  - azurepublicipaddresses/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - azure.microsoft.com
  resources:
  - azuresqlactions
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - azure.microsoft.com
  resources:
  - azuresqlactions/finalizers
  - azuresqlactions/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - azure.microsoft.com
  resources:
  - azuresqldatabases
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - azure.microsoft.com
  resources:
  - azuresqldatabases/finalizers
  - azuresqldatabases/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - azure.microsoft.com
  resources:
  - azuresqlfailovergroups
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - azure.microsoft.com
  resources:
  - azuresqlfailovergroups/finalizers
  - azuresqlfailovergroups/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - azure.microsoft.com
  resources:
  - azuresqlfirewallrules
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - azure.microsoft.com
  resources:
  - azuresqlfirewallrules/finalizers
  - azuresqlfirewallrules/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - azure.microsoft.com
  resources:
  - azuresqlmanagedusers
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - azure.microsoft.com
  resources:
  - azuresqlmanagedusers/finalizers
  - azuresqlmanagedusers/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - azure.microsoft.com
  resources:
  - azuresqlservers
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - azure.microsoft.com
  resources:
  - azuresqlservers/finalizers
  - azuresqlservers/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - azure.microsoft.com
  resources:
  - azuresqlusers
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - azure.microsoft.com
  resources:
  - azuresqlusers/finalizers
  - azuresqlusers/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - azure.microsoft.com
  resources:
  - azuresqlvnetrules
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - azure.microsoft.com
  resources:
  - azuresqlvnetrules/finalizers
  - azuresqlvnetrules/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - azure.microsoft.com
  resources:
  - azurevirtualmachineextensions
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - azure.microsoft.com
  resources:
  - azurevirtualmachineextensions/finalizers
  - azurevirtualmachineextensions/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - azure.microsoft.com
  resources:
  - azurevirtualmachines
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - azure.microsoft.com
  resources:
  - azurevirtualmachines/finalizers
  - azurevirtualmachines/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - azure.microsoft.com
  resources:
  - azurevmscalesets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - azure.microsoft.com
  resources:
  - azurevmscalesets/finalizers
  - azurevmscalesets/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - azure.microsoft.com
  resources:
  - blobcontainers
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - azure.microsoft.com
  resources:
  - blobcontainers/finalizers
  - blobcontainers/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - azure.microsoft.com
  resources:
  - consumergroups
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - azure.microsoft.com
  resources:
  - consumergroups/finalizers
  - consumergroups/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - azure.microsoft.com
  resources:
  - cosmosdbs
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - azure.microsoft.com
  resources:
  - cosmosdbs/finalizers
  - cosmosdbs/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - azure.microsoft.com
  resources:
  - cosmosdbsqldatabases
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - azure.microsoft.com
  resources:
  - cosmosdbsqldatabases/finalizers
  - cosmosdbsqldatabases/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - azure.microsoft.com
  resources:
  - eventhubnamespaces
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - azure.microsoft.com
  resources:
  - eventhubnamespaces/finalizers
  - eventhubnamespaces/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - azure.microsoft.com
  resources:
  - eventhubs
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - azure.microsoft.com
  resources:
  - eventhubs/finalizers
  - eventhubs/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - azure.microsoft.com
  resources:
  - events
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - azure.microsoft.com
  resources:
  - keyvaultkeys
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - azure.microsoft.com
  resources:
  - keyvaultkeys/finalizers
  - keyvaultkeys/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - azure.microsoft.com
  resources:
  - keyvaults
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - azure.microsoft.com
  resources:
  - keyvaults/finalizers
  - keyvaults/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - azure.microsoft.com
  resources:
  - mysqlaadusers
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - azure.microsoft.com
  resources:
  - mysqlaadusers/finalizers
  - mysqlaadusers/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - azure.microsoft.com
  resources:
  - mysqldatabases
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - azure.microsoft.com
  resources:
  - mysqldatabases/finalizers
  - mysqldatabases/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - azure.microsoft.com
  resources:
  - mysqlfirewallrules
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - azure.microsoft.com
  resources:
  - mysqlfirewallrules/finalizers
  - mysqlfirewallrules/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - azure.microsoft.com
  resources:
  - mysqlserveradministrators
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - azure.microsoft.com
  resources:
  - mysqlserveradministrators/finalizers
  - mysqlserveradministrators/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - azure.microsoft.com
  resources:
  - mysqlservers
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - azure.microsoft.com
  resources:
  - mysqlservers/finalizers
  - mysqlservers/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - azure.microsoft.com
  resources:
  - mysqlusers
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - azure.microsoft.com
  resources:
  - mysqlusers/finalizers
  - mysqlusers/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - azure.microsoft.com
  resources:
  - mysqlvnetrules
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - azure.microsoft.com
  resources:
  - mysqlvnetrules/finalizers
  - mysqlvnetrules/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - azure.microsoft.com
  resources:
  - postgresqldatabases
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - azure.microsoft.com
  resources:
  - postgresqldatabases/finalizers
  - postgresqldatabases/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - azure.microsoft.com
  resources:
  - postgresqlfirewallrules
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - azure.microsoft.com
  resources:
  - postgresqlfirewallrules/finalizers
  - postgresqlfirewallrules/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - azure.microsoft.com
  resources:
  - postgresqlservers
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - azure.microsoft.com
  resources:
  - postgresqlservers/finalizers
  - postgresqlservers/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - azure.microsoft.com
  resources:
  - postgresqlusers
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - azure.microsoft.com
  resources:
  - postgresqlusers/finalizers
  - postgresqlusers/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - azure.microsoft.com
  resources:
  - postgresqlvnetrules
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - azure.microsoft.com
  resources:
  - postgresqlvnetrules/finalizers
  - postgresqlvnetrules/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - azure.microsoft.com
  resources:
  - rediscacheactions
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - azure.microsoft.com
  resources:
  - rediscacheactions/finalizers
  - rediscacheactions/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - azure.microsoft.com
  resources:
  - rediscachefirewallrules
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - azure.microsoft.com
  resources:
  - rediscachefirewallrules/finalizers
  - rediscachefirewallrules/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - azure.microsoft.com
  resources:
  - rediscaches
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - azure.microsoft.com
  resources:
  - rediscaches/finalizers
  - rediscaches/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - azure.microsoft.com
  resources:
  - resourcegroups
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - azure.microsoft.com
  resources:
  - resourcegroups/finalizers
  - resourcegroups/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - azure.microsoft.com
  resources:
  - storageaccounts
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - azure.microsoft.com
  resources:
  - storageaccounts/finalizers
  - storageaccounts/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - azure.microsoft.com
  resources:
  - virtualnetworks
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - azure.microsoft.com
  resources:
  - virtualnetworks/finalizers
  - virtualnetworks/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: azureoperator-proxy-role
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: azureoperator-leader-election-rolebinding
  namespace: azureoperator-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: azureoperator-leader-election-role
subjects:
- kind: ServiceAccount
  name: default
  namespace: azureoperator-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: azureoperator-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: azureoperator-manager-role
subjects:
- kind: ServiceAccount
  name: default
  namespace: azureoperator-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: azureoperator-proxy-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: azureoperator-proxy-role
subjects:
- kind: ServiceAccount
  name: default
  namespace: azureoperator-system
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    prometheus.io/port: "8443"
    prometheus.io/scheme: https
    prometheus.io/scrape: "true"
  labels:
    control-plane: controller-manager
  name: azureoperator-controller-manager-metrics-service
  namespace: azureoperator-system
spec:
  ports:
  - name: https
    port: 8443
    targetPort: https
  selector:
    control-plane: controller-manager
---
apiVersion: v1
kind: Service
metadata:
  name: azureoperator-webhook-service
  namespace: azureoperator-system
spec:
  ports:
  - port: 443
    targetPort: 9443
  selector:
    control-plane: controller-manager
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: azure-service-operator-v1
    control-plane: controller-manager
  name: azureoperator-controller-manager
  namespace: azureoperator-system
spec:
  replicas: 1
  selector:
    matchLabels:
      control-plane: controller-manager
  template:
    metadata:
      labels:
        aadpodidbinding: aso_manager_binding
        control-plane: controller-manager
    spec:
      containers:
      - args:
        - --metrics-addr=127.0.0.1:8080
        command:
        - /manager
        env:
        - name: AZURE_CLIENT_ID
          valueFrom:
            secretKeyRef:
              key: AZURE_CLIENT_ID
              name: azureoperatorsettings
              optional: true
        - name: AZURE_CLIENT_SECRET
          valueFrom:
            secretKeyRef:
              key: AZURE_CLIENT_SECRET
              name: azureoperatorsettings
              optional: true
        - name: AZURE_TENANT_ID
          valueFrom:
            secretKeyRef:
              key: AZURE_TENANT_ID
              name: azureoperatorsettings
              optional: true
        - name: AZURE_SUBSCRIPTION_ID
          valueFrom:
            secretKeyRef:
              key: AZURE_SUBSCRIPTION_ID
              name: azureoperatorsettings
              optional: true
        - name: AZURE_USE_MI
          valueFrom:
            secretKeyRef:
              key: AZURE_USE_MI
              name: azureoperatorsettings
              optional: true
        - name: AZURE_OPERATOR_KEYVAULT
          valueFrom:
            secretKeyRef:
              key: AZURE_OPERATOR_KEYVAULT
              name: azureoperatorsettings
              optional: true
        - name: AZURE_CLOUD_ENV
          valueFrom:
            secretKeyRef:
              key: AZURE_CLOUD_ENV
              name: azureoperatorsettings
              optional: true
        - name: AZURE_SECRET_NAMING_VERSION
          valueFrom:
            secretKeyRef:
              key: AZURE_SECRET_NAMING_VERSION
              name: azureoperatorsettings
              optional: true
        - name: PURGE_DELETED_KEYVAULT_SECRETS
          valueFrom:
            secretKeyRef:
              key: PURGE_DELETED_KEYVAULT_SECRETS
              name: azureoperatorsettings
              optional: true
        - name: RECOVER_SOFT_DELETED_KEYVAULT_SECRETS
          valueFrom:
            secretKeyRef:
              key: RECOVER_SOFT_DELETED_KEYVAULT_SECRETS
              name: azureoperatorsettings
              optional: true
        - name: AZURE_TARGET_NAMESPACES
          valueFrom:
            secretKeyRef:
              key: AZURE_TARGET_NAMESPACES
              name: azureoperatorsettings
              optional: true
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: REQUEUE_AFTER
          value: "30"
        image: mcr.microsoft.com/k8s/azureserviceoperator:1.0.59040
        name: manager
        ports:
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
        - containerPort: 8081
          name: liveness-port
          protocol: TCP
        resources:
          limits:
            cpu: 500m
            memory: 512Mi
          requests:
            cpu: 200m
            memory: 256Mi
        volumeMounts:
        - mountPath: /tmp/k8s-webhook-server/serving-certs
          name: cert
          readOnly: true
      - args:
        - --secure-listen-address=0.0.0.0:8443
        - --upstream=http://127.0.0.1:8080/
        - --logtostderr=true
        - --v=10
        image: gcr.io/kubebuilder/kube-rbac-proxy:v0.13.1
        name: kube-rbac-proxy
        ports:
        - containerPort: 8443
          name: https
      nodeSelector:
        kubernetes.io/os: linux
      terminationGracePeriodSeconds: 10
      volumes:
      - name: cert
        secret:
          defaultMode: 420
          secretName: webhook-server-cert
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: azureoperator-serving-cert
  namespace: azureoperator-system
spec:
  dnsNames:
  - azureoperator-webhook-service.azureoperator-system.svc
  - azureoperator-webhook-service.azureoperator-system.svc.cluster.local
  issuerRef:
    kind: Issuer
    name: azureoperator-selfsigned-issuer
  secretName: webhook-server-cert
---
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  name: azureoperator-selfsigned-issuer
  namespace: azureoperator-system
spec:
  selfSigned: {}
---
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  annotations:
    cert-manager.io/inject-ca-from: azureoperator-system/azureoperator-serving-cert
  name: azureoperator-validating-webhook-configuration
webhooks:
- admissionReviewVersions:
  - v1
  - v1beta1
  clientConfig:
    service:
      name: azureoperator-webhook-service
      namespace: azureoperator-system
      path: /validate-azure-microsoft-com-v1alpha2-mysqlaaduser
  failurePolicy: Fail
  name: vmysqlaaduser.kb.io
  rules:
  - apiGroups:
    - azure.microsoft.com
    apiVersions:
    - v1alpha2
    operations:
    - CREATE
    - UPDATE
    resources:
    - mysqlaadusers
  sideEffects: None
- admissionReviewVersions:
  - v1
  - v1beta1
  clientConfig:
    service:
      name: azureoperator-webhook-service
      namespace: azureoperator-system
      path: /validate-azure-microsoft-com-v1alpha2-mysqluser
  failurePolicy: Fail
  name: vmysqluser.kb.io
  rules:
  - apiGroups:
    - azure.microsoft.com
    apiVersions:
    - v1alpha2
    operations:
    - CREATE
    - UPDATE
    resources:
    - mysqlusers
  sideEffects: None
- admissionReviewVersions:
  - v1
  - v1beta1
  clientConfig:
    service:
      name: azureoperator-webhook-service
      namespace: azureoperator-system
      path: /validate-azure-microsoft-com-v1alpha1-azuresqlmanageduser
  failurePolicy: Fail
  name: vazuresqlmanageduser.kb.io
  rules:
  - apiGroups:
    - azure.microsoft.com
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - azuresqlmanagedusers
  sideEffects: None
- admissionReviewVersions:
  - v1
  - v1beta1
  clientConfig:
    service:
      name: azureoperator-webhook-service
      namespace: azureoperator-system
      path: /validate-azure-microsoft-com-v1alpha1-azuresqluser
  failurePolicy: Fail
  name: vazuresqluser.kb.io
  rules:
  - apiGroups:
    - azure.microsoft.com
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - azuresqlusers
  sideEffects: None
